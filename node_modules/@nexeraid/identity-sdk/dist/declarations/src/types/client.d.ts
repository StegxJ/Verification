import type { BlockchainSignature } from "@nexeraprotocol/identity-schemas";
import type { KycCompletionData } from "@nexeraprotocol/identity-schemas/identity";
export type IdentityAuthenticationInputs = {
    accessToken: string;
    signature?: string;
    signingMessage?: string;
};
export type IIdentityClient = {
    /**
     * Set a callback for signing personal data. It needs to be set before calling start functions.
     * @param signPersonalDataCallback - The callback function to sign personal data.
     */
    onSignMessage: (signPersonalDataCallback: (data: {
        message: string;
    }) => Promise<BlockchainSignature>) => void;
    /**
     * Set a callback for handling kyc completion data.
     * @param kycCompletionCallback - The callback function to handle kyc completion data.
     */
    onKycCompletion: (kycCompletionCallback: (data: KycCompletionData) => void) => void;
    /**
     * Set a callback for handling the closing of the kyc modal.
     * @param onCloseScreenCallback - The callback function to call before screen is closed.
     */
    onCloseScreen: (onCloseScreenCallback: () => Promise<string>) => void;
};
//# sourceMappingURL=client.d.ts.map