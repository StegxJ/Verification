import { bq as SupportedType, bW as _toConsumableArray, bf as ARRAY_OPERATORS, bl as BOOLEAN_OPERATORS, bj as NUMERIC_OPERATORS, bh as STRING_OPERATORS } from '../../dist/kyc.schema-d70e1cdb.esm.js';
export { L as Alpha2Country, cf as CredentialMediaType, ca as CredentialNames, c9 as CredentialSchemas, cd as CredentialType, C as CredentialTypes, c8 as GenericVerifiableCredentialSchema, bX as ID3CredentialSubjectSchema, c5 as IDImageCredentialSubjectSchema, c4 as IDInformationCredentialSubjectSchema, bY as IDScanCredentialSubjectSchema, bZ as IDScanPassportCredentialSubjectSchema, b_ as IDScanSelfieCredentialSubjectSchema, J as ISO3CountryCode, cb as NexeraCredentialType, c3 as OLD_AMLScreeningsResultsCredentialSubjectSchema, b$ as OLD_IDImageCredentialSubjectSchema, c0 as OLD_IDInformationCredentialSubjectSchema, c1 as OLD_ProofOfResidenceCredentialSubjectSchema, c2 as OLD_SelfieImageCredentialSubjectSchema, c7 as ProofOfResidenceCredentialSubjectSchema, c6 as SelfieImageCredentialSubjectSchema, ce as VerifiableCredential, M as countryISO3toISO2Mapping, cc as getCredentialName, Q as isoCountriesNameFromISO2 } from '../../dist/kyc.schema-d70e1cdb.esm.js';
import 'zod';

var VC_JSON_SCHEMA_MAP = {
  ProofOfResidence: {
    prod: "https://quicknode.quicknode-ipfs.com/ipfs/QmZziNSpBSLWBZGb6mzXXexYfY311knw8o6yAyCTZ9GFxi",
    stage: "https://quicknode.quicknode-ipfs.com/ipfs/QmZziNSpBSLWBZGb6mzXXexYfY311knw8o6yAyCTZ9GFxi",
    dev: "https://quicknode.quicknode-ipfs.com/ipfs/QmZziNSpBSLWBZGb6mzXXexYfY311knw8o6yAyCTZ9GFxi",
    local: "https://quicknode.quicknode-ipfs.com/ipfs/QmZziNSpBSLWBZGb6mzXXexYfY311knw8o6yAyCTZ9GFxi",
    "test-dev-1": "https://quicknode.quicknode-ipfs.com/ipfs/QmZziNSpBSLWBZGb6mzXXexYfY311knw8o6yAyCTZ9GFxi",
    "test-dev-2": "https://quicknode.quicknode-ipfs.com/ipfs/QmZziNSpBSLWBZGb6mzXXexYfY311knw8o6yAyCTZ9GFxi"
  },
  ProofOfResidence_LD: {
    prod: "https://quicknode.quicknode-ipfs.com/ipfs/QmWEa2nNHLP3bsFYDGZbpLuM42J8krpEhjsuDkT4Q19VWf",
    stage: "https://quicknode.quicknode-ipfs.com/ipfs/QmWEa2nNHLP3bsFYDGZbpLuM42J8krpEhjsuDkT4Q19VWf",
    dev: "https://quicknode.quicknode-ipfs.com/ipfs/QmWEa2nNHLP3bsFYDGZbpLuM42J8krpEhjsuDkT4Q19VWf",
    local: "https://quicknode.quicknode-ipfs.com/ipfs/QmWEa2nNHLP3bsFYDGZbpLuM42J8krpEhjsuDkT4Q19VWf",
    "test-dev-1": "https://quicknode.quicknode-ipfs.com/ipfs/QmWEa2nNHLP3bsFYDGZbpLuM42J8krpEhjsuDkT4Q19VWf",
    "test-dev-2": "https://quicknode.quicknode-ipfs.com/ipfs/QmWEa2nNHLP3bsFYDGZbpLuM42J8krpEhjsuDkT4Q19VWf"
  },
  IDInformation: {
    prod: "https://quicknode.quicknode-ipfs.com/ipfs/QmRTFErdwKyBCKVLwS8Y8YjPkjFpAGdC2U26sPTTRRjoom",
    stage: "https://quicknode.quicknode-ipfs.com/ipfs/QmRTFErdwKyBCKVLwS8Y8YjPkjFpAGdC2U26sPTTRRjoom",
    dev: "https://quicknode.quicknode-ipfs.com/ipfs/QmRTFErdwKyBCKVLwS8Y8YjPkjFpAGdC2U26sPTTRRjoom",
    local: "https://quicknode.quicknode-ipfs.com/ipfs/QmRTFErdwKyBCKVLwS8Y8YjPkjFpAGdC2U26sPTTRRjoom",
    "test-dev-1": "https://quicknode.quicknode-ipfs.com/ipfs/QmRTFErdwKyBCKVLwS8Y8YjPkjFpAGdC2U26sPTTRRjoom",
    "test-dev-2": "https://quicknode.quicknode-ipfs.com/ipfs/QmRTFErdwKyBCKVLwS8Y8YjPkjFpAGdC2U26sPTTRRjoom"
  },
  AMLScreeningsResults: {
    prod: "https://quicknode.quicknode-ipfs.com/ipfs/QmacioN1D6w8Pz1vzYKZotMESuNKu9kq5K3XWGA4SRrPyx",
    stage: "https://quicknode.quicknode-ipfs.com/ipfs/QmacioN1D6w8Pz1vzYKZotMESuNKu9kq5K3XWGA4SRrPyx",
    dev: "https://quicknode.quicknode-ipfs.com/ipfs/QmacioN1D6w8Pz1vzYKZotMESuNKu9kq5K3XWGA4SRrPyx",
    local: "https://quicknode.quicknode-ipfs.com/ipfs/QmacioN1D6w8Pz1vzYKZotMESuNKu9kq5K3XWGA4SRrPyx"
  },
  IDImage: {
    prod: "https://quicknode.quicknode-ipfs.com/ipfs/QmRdTMQFBM3nqLMndXernJFgtsWUJdS8aJXGvjDwQtDp34",
    stage: "https://quicknode.quicknode-ipfs.com/ipfs/QmRdTMQFBM3nqLMndXernJFgtsWUJdS8aJXGvjDwQtDp34",
    dev: "https://quicknode.quicknode-ipfs.com/ipfs/QmRdTMQFBM3nqLMndXernJFgtsWUJdS8aJXGvjDwQtDp34",
    local: "https://quicknode.quicknode-ipfs.com/ipfs/QmRdTMQFBM3nqLMndXernJFgtsWUJdS8aJXGvjDwQtDp34",
    "test-dev-1": "https://quicknode.quicknode-ipfs.com/ipfs/QmRdTMQFBM3nqLMndXernJFgtsWUJdS8aJXGvjDwQtDp34",
    "test-dev-2": "https://quicknode.quicknode-ipfs.com/ipfs/QmRdTMQFBM3nqLMndXernJFgtsWUJdS8aJXGvjDwQtDp34"
  },
  SelfieImage: {
    prod: "https://quicknode.quicknode-ipfs.com/ipfs/QmQWT1v3gVzHFtHMwKYrDBSJ3XNjL2haiTaSkcVmGCWcgZ",
    stage: "https://quicknode.quicknode-ipfs.com/ipfs/QmQWT1v3gVzHFtHMwKYrDBSJ3XNjL2haiTaSkcVmGCWcgZ",
    dev: "https://quicknode.quicknode-ipfs.com/ipfs/QmQWT1v3gVzHFtHMwKYrDBSJ3XNjL2haiTaSkcVmGCWcgZ",
    local: "https://quicknode.quicknode-ipfs.com/ipfs/QmQWT1v3gVzHFtHMwKYrDBSJ3XNjL2haiTaSkcVmGCWcgZ",
    "test-dev-1": "https://quicknode.quicknode-ipfs.com/ipfs/QmQWT1v3gVzHFtHMwKYrDBSJ3XNjL2haiTaSkcVmGCWcgZ",
    "test-dev-2": "https://quicknode.quicknode-ipfs.com/ipfs/QmQWT1v3gVzHFtHMwKYrDBSJ3XNjL2haiTaSkcVmGCWcgZ"
  },
  IDInformation_LD: {
    prod: "https://quicknode.quicknode-ipfs.com/ipfs/QmUFBpPnPanYZPcRKRnGFZeyYSpXx1L3XNngowjRtQFzrD",
    stage: "https://quicknode.quicknode-ipfs.com/ipfs/QmUFBpPnPanYZPcRKRnGFZeyYSpXx1L3XNngowjRtQFzrD",
    dev: "https://quicknode.quicknode-ipfs.com/ipfs/QmUFBpPnPanYZPcRKRnGFZeyYSpXx1L3XNngowjRtQFzrD",
    local: "https://quicknode.quicknode-ipfs.com/ipfs/QmUFBpPnPanYZPcRKRnGFZeyYSpXx1L3XNngowjRtQFzrD",
    "test-dev-1": "https://quicknode.quicknode-ipfs.com/ipfs/QmUFBpPnPanYZPcRKRnGFZeyYSpXx1L3XNngowjRtQFzrD",
    "test-dev-2": "https://quicknode.quicknode-ipfs.com/ipfs/QmUFBpPnPanYZPcRKRnGFZeyYSpXx1L3XNngowjRtQFzrD"
  },
  AMLScreeningsResults_LD: {
    prod: "https://quicknode.quicknode-ipfs.com/ipfs/Qma96fMaDmpdJMnVsRdAeVokyU7KBqRSuY8eZJkoLFdsvJ",
    stage: "https://quicknode.quicknode-ipfs.com/ipfs/Qma96fMaDmpdJMnVsRdAeVokyU7KBqRSuY8eZJkoLFdsvJ",
    dev: "https://quicknode.quicknode-ipfs.com/ipfs/Qma96fMaDmpdJMnVsRdAeVokyU7KBqRSuY8eZJkoLFdsvJ",
    local: "https://quicknode.quicknode-ipfs.com/ipfs/Qma96fMaDmpdJMnVsRdAeVokyU7KBqRSuY8eZJkoLFdsvJ"
  },
  IDImage_LD: {
    prod: "https://quicknode.quicknode-ipfs.com/ipfs/QmTYHuqTLNRyfUjncDNwd1KKw9sc7DiewTm1FJ4RPHYqcW",
    stage: "https://quicknode.quicknode-ipfs.com/ipfs/QmTYHuqTLNRyfUjncDNwd1KKw9sc7DiewTm1FJ4RPHYqcW",
    dev: "https://quicknode.quicknode-ipfs.com/ipfs/QmTYHuqTLNRyfUjncDNwd1KKw9sc7DiewTm1FJ4RPHYqcW",
    local: "https://quicknode.quicknode-ipfs.com/ipfs/QmTYHuqTLNRyfUjncDNwd1KKw9sc7DiewTm1FJ4RPHYqcW",
    "test-dev-1": "https://quicknode.quicknode-ipfs.com/ipfs/QmTYHuqTLNRyfUjncDNwd1KKw9sc7DiewTm1FJ4RPHYqcW",
    "test-dev-2": "https://quicknode.quicknode-ipfs.com/ipfs/QmTYHuqTLNRyfUjncDNwd1KKw9sc7DiewTm1FJ4RPHYqcW"
  },
  SelfieImage_LD: {
    prod: "https://quicknode.quicknode-ipfs.com/ipfs/QmUV9bVQ433m5ejjgqodQ4kfWqMMzFCwJqcqRhzSfENEMX",
    stage: "https://quicknode.quicknode-ipfs.com/ipfs/QmUV9bVQ433m5ejjgqodQ4kfWqMMzFCwJqcqRhzSfENEMX",
    dev: "https://quicknode.quicknode-ipfs.com/ipfs/QmUV9bVQ433m5ejjgqodQ4kfWqMMzFCwJqcqRhzSfENEMX",
    local: "https://quicknode.quicknode-ipfs.com/ipfs/QmUV9bVQ433m5ejjgqodQ4kfWqMMzFCwJqcqRhzSfENEMX",
    "test-dev-1": "https://quicknode.quicknode-ipfs.com/ipfs/QmUV9bVQ433m5ejjgqodQ4kfWqMMzFCwJqcqRhzSfENEMX",
    "test-dev-2": "https://quicknode.quicknode-ipfs.com/ipfs/QmUV9bVQ433m5ejjgqodQ4kfWqMMzFCwJqcqRhzSfENEMX"
  },
  ID3: {
    prod: "https://quicknode.quicknode-ipfs.com/ipfs/QmSiv7jMN1mcatdnsG4kJkLPVYkT92tV3oKMWqE7dYqzwX",
    stage: "https://quicknode.quicknode-ipfs.com/ipfs/QmSiv7jMN1mcatdnsG4kJkLPVYkT92tV3oKMWqE7dYqzwX",
    dev: "https://quicknode.quicknode-ipfs.com/ipfs/QmSiv7jMN1mcatdnsG4kJkLPVYkT92tV3oKMWqE7dYqzwX",
    local: "https://quicknode.quicknode-ipfs.com/ipfs/QmSiv7jMN1mcatdnsG4kJkLPVYkT92tV3oKMWqE7dYqzwX"
  },
  IDScan: {
    prod: "https://quicknode.quicknode-ipfs.com/ipfs/QmZHArC9SYXEvNLei7qJCQr5qapSYYhmAMmsh5r35AtcoY",
    stage: "https://quicknode.quicknode-ipfs.com/ipfs/QmZHArC9SYXEvNLei7qJCQr5qapSYYhmAMmsh5r35AtcoY",
    dev: "https://quicknode.quicknode-ipfs.com/ipfs/QmZHArC9SYXEvNLei7qJCQr5qapSYYhmAMmsh5r35AtcoY",
    local: "https://quicknode.quicknode-ipfs.com/ipfs/QmZHArC9SYXEvNLei7qJCQr5qapSYYhmAMmsh5r35AtcoY"
  },
  IDScanSelfie: {
    prod: "https://quicknode.quicknode-ipfs.com/ipfs/QmQQX5t9ZHqGMY5qKrxApMjejw4bugGVae3HddrcShZaGe",
    stage: "https://quicknode.quicknode-ipfs.com/ipfs/QmQQX5t9ZHqGMY5qKrxApMjejw4bugGVae3HddrcShZaGe",
    dev: "https://quicknode.quicknode-ipfs.com/ipfs/QmQQX5t9ZHqGMY5qKrxApMjejw4bugGVae3HddrcShZaGe",
    local: "https://quicknode.quicknode-ipfs.com/ipfs/QmQQX5t9ZHqGMY5qKrxApMjejw4bugGVae3HddrcShZaGe"
  },
  IDScanPassport: {
    prod: "https://quicknode.quicknode-ipfs.com/ipfs/QmUej2eizQoJQXzo4fmoN6Eu3SMAbUjVXG1rE3GotRDfST",
    stage: "https://quicknode.quicknode-ipfs.com/ipfs/QmUej2eizQoJQXzo4fmoN6Eu3SMAbUjVXG1rE3GotRDfST",
    dev: "https://quicknode.quicknode-ipfs.com/ipfs/QmUej2eizQoJQXzo4fmoN6Eu3SMAbUjVXG1rE3GotRDfST",
    local: "https://quicknode.quicknode-ipfs.com/ipfs/QmUej2eizQoJQXzo4fmoN6Eu3SMAbUjVXG1rE3GotRDfST"
  },
  ID3_LD: {
    prod: "https://quicknode.quicknode-ipfs.com/ipfs/QmSFao9JrbMKLvjuuWdUqhhkrPCUcVSaoMiPWKMUMsAx9a",
    stage: "https://quicknode.quicknode-ipfs.com/ipfs/QmSFao9JrbMKLvjuuWdUqhhkrPCUcVSaoMiPWKMUMsAx9a",
    dev: "https://quicknode.quicknode-ipfs.com/ipfs/QmSFao9JrbMKLvjuuWdUqhhkrPCUcVSaoMiPWKMUMsAx9a",
    local: "https://quicknode.quicknode-ipfs.com/ipfs/QmSFao9JrbMKLvjuuWdUqhhkrPCUcVSaoMiPWKMUMsAx9a"
  },
  IDScan_LD: {
    prod: "https://quicknode.quicknode-ipfs.com/ipfs/QmaoyFJjwbkMSTwWurK4tYFxWd3CDnMLu2KustmWL8Ruks",
    stage: "https://quicknode.quicknode-ipfs.com/ipfs/QmaoyFJjwbkMSTwWurK4tYFxWd3CDnMLu2KustmWL8Ruks",
    dev: "https://quicknode.quicknode-ipfs.com/ipfs/QmaoyFJjwbkMSTwWurK4tYFxWd3CDnMLu2KustmWL8Ruks",
    local: "https://quicknode.quicknode-ipfs.com/ipfs/QmaoyFJjwbkMSTwWurK4tYFxWd3CDnMLu2KustmWL8Ruks"
  },
  IDScanSelfie_LD: {
    prod: "https://quicknode.quicknode-ipfs.com/ipfs/QmYoDQKUHSMEZk2ZwaXWvdHbYoLXShVWxRdsu1jsXxhN6F",
    stage: "https://quicknode.quicknode-ipfs.com/ipfs/QmYoDQKUHSMEZk2ZwaXWvdHbYoLXShVWxRdsu1jsXxhN6F",
    dev: "https://quicknode.quicknode-ipfs.com/ipfs/QmYoDQKUHSMEZk2ZwaXWvdHbYoLXShVWxRdsu1jsXxhN6F",
    local: "https://quicknode.quicknode-ipfs.com/ipfs/QmYoDQKUHSMEZk2ZwaXWvdHbYoLXShVWxRdsu1jsXxhN6F"
  },
  IDScanPassport_LD: {
    prod: "https://quicknode.quicknode-ipfs.com/ipfs/QmRBfV9TboGRz42rT45mnMMK8VTtTc9r1mpLQjGfyXCgaf",
    stage: "https://quicknode.quicknode-ipfs.com/ipfs/QmRBfV9TboGRz42rT45mnMMK8VTtTc9r1mpLQjGfyXCgaf",
    dev: "https://quicknode.quicknode-ipfs.com/ipfs/QmRBfV9TboGRz42rT45mnMMK8VTtTc9r1mpLQjGfyXCgaf",
    local: "https://quicknode.quicknode-ipfs.com/ipfs/QmRBfV9TboGRz42rT45mnMMK8VTtTc9r1mpLQjGfyXCgaf"
  }
};

var getCredentialSchemaLocation = function getCredentialSchemaLocation(props) {
  // eslint-disable-next-line @typescript-eslint/ban-ts-comment
  // @ts-ignore
  return VC_JSON_SCHEMA_MAP[props.type === "json" ? props.credentialType : "".concat(props.credentialType, "_LD")
  // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access
  ][props.env];
};

function _typeof(o) {
  "@babel/helpers - typeof";

  return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) {
    return typeof o;
  } : function (o) {
    return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o;
  }, _typeof(o);
}

/* eslint-disable */
/**
 * Strips
 * - null
 * - undefined
 * - empty string ("")
 * - empty objects ({})
 * - if object contains only empty objects (or empty arrays), it will be stripped
 * from an object
 * @param object
 */
function cleanObject(object) {
  var isObjectEmpty = function isObjectEmpty(obj) {
    if (_typeof(obj) !== "object" || obj === null) return false;
    for (var key in obj) {
      if (Object.hasOwnProperty.call(obj, key)) return false;
    }
    return true;
  };
  var isArrayEmpty = function isArrayEmpty(arr) {
    return arr.every(function (item) {
      return item === null || item === undefined || item === "" || _typeof(item) === "object" && !Array.isArray(item) && isObjectEmpty(item) || Array.isArray(item) && isArrayEmpty(item);
    });
  };
  Object.keys(object).forEach(function (key) {
    var value = object[key];
    if (value && _typeof(value) === "object") {
      if (Array.isArray(value)) {
        if (isArrayEmpty(value)) {
          delete object[key];
        } else {
          value = value.map(function (item) {
            return _typeof(item) === "object" ? cleanObject(item) : item;
          }).filter(function (item) {
            return !(item === null || item === undefined || item === "" || _typeof(item) === "object" && isObjectEmpty(item));
          });
          if (isArrayEmpty(value)) {
            delete object[key];
          } else {
            object[key] = value;
          }
        }
      } else {
        var cleanedObject = cleanObject(value);
        if (isObjectEmpty(cleanedObject)) {
          delete object[key];
        } else {
          object[key] = cleanedObject;
        }
      }
    } else if (value === null || value === undefined || value === "") {
      delete object[key];
    }
  });
  return object;
}

/** Generated with `./generate-schemas-ts.sh` */
var schema$7 = {
  description: "Stores the data of the credential",
  title: "Credential subject",
  type: "object",
  required: ["id", "journeyId", "base64_front", "name", "documentType", "mediaType_front", "reviewAnswer", "entryDate", "entryTime"],
  properties: {
    id: {
      description: "Stores the DID of the subject that owns the credential",
      title: "Credential subject ID",
      format: "uri",
      type: "string"
    },
    journeyId: {
      title: "Journey ID",
      description: "The ID of the journey that this credential is associated with",
      type: "string",
      format: "uuid"
    },
    base64_front: {
      title: "Front image",
      description: "Base64 encoded image of the front of the document",
      type: "string"
    },
    base64_back: {
      title: "Back image",
      description: "Base64 encoded image of the back of the document",
      type: "string"
    },
    name: {
      title: "Name",
      description: "Name of the document (e.g. passport.jpg)",
      type: "string"
    },
    documentType: {
      title: "Document Type",
      description: "Type of the document (e.g. passport)",
      type: "string",
      "enum": ["ID_CARD", "PASSPORT", "DRIVERS", "RESIDENCE_PERMIT", "UTILITY_BILL", "SELFIE", "VIDEO_SELFIE", "PROFILE_IMAGE", "ID_DOC_PHOTO", "AGREEMENT", "CONTRACT", "DRIVERS_TRANSLATION", "INVESTOR_DOC", "VEHICLE_REGISTRATION_CERTIFICATE", "INCOME_SOURCE", "PAYMENT_METHOD", "BANK_CARD", "COVID_VACCINATION_FORM", "OTHER"]
    },
    entryDate: {
      description: "Entry date associated with the credential",
      title: "Entry Date in integer format of yyyymmdd, example: 20231226 2023 year, 12-December, 26-day",
      type: "integer"
    },
    entryTime: {
      description: "Entry time associated with the credential",
      title: "Entry Time",
      type: "string",
      format: "time"
    },
    mediaType_front: {
      title: "Media Type",
      description: "Media type of the front of the document (e.g. image/jpeg, image/png, application/pdf)",
      type: "string",
      "enum": ["image/jpeg", "image/jpg", "image/png", "application/pdf"]
    },
    mediaType_back: {
      title: "Media Type",
      description: "Media type of the back of the document (e.g. image/jpeg, image/png, application/pdf)",
      type: "string",
      "enum": ["image/jpeg", "image/jpg", "image/png", "application/pdf"]
    },
    reviewAnswer: {
      description: "Review answer from kyc provider",
      title: "Review Answer",
      type: "string",
      "enum": ["RED", "YELLOW", "GREEN"]
    },
    reviewRejectType: {
      description: "Review reject type",
      title: "Review Reject Type",
      type: "string",
      "enum": ["FINAL", "RETRY"]
    },
    reviewRejectLabels: {
      description: "Reject labels",
      title: "Reject Labels",
      type: "array",
      items: {
        type: "string",
        "enum": ["FORGERY", "DOCUMENT_TEMPLATE", "LOW_QUALITY", "SPAM", "NOT_DOCUMENT", "SELFIE_MISMATCH", "ID_INVALID", "FOREIGNER", "DUPLICATE", "BAD_AVATAR", "WRONG_USER_REGION", "INCOMPLETE_DOCUMENT", "BLACKLIST", "BLOCKLIST", "UNSATISFACTORY_PHOTOS", "DOCUMENT_PAGE_MISSING", "DOCUMENT_DAMAGED", "REGULATIONS_VIOLATIONS", "INCONSISTENT_PROFILE", "PROBLEMATIC_APPLICANT_DATA", "ADDITIONAL_DOCUMENT_REQUIRED", "AGE_REQUIREMENT_MISMATCH", "EXPERIENCE_REQUIREMENT_MISMATCH", "CRIMINAL", "WRONG_ADDRESS", "GRAPHIC_EDITOR", "DOCUMENT_DEPRIVED", "COMPROMISED_PERSONS", "PEP", "ADVERSE_MEDIA", "FRAUDULENT_PATTERNS", "SANCTIONS", "NOT_ALL_CHECKS_COMPLETED", "FRONT_SIDE_MISSING", "BACK_SIDE_MISSING", "SCREENSHOTS", "BLACK_AND_WHITE", "INCOMPATIBLE_LANGUAGE", "EXPIRATION_DATE", "UNFILLED_ID", "BAD_SELFIE", "BAD_VIDEO_SELFIE", "BAD_FACE_MATCHING", "BAD_PROOF_OF_IDENTITY", "BAD_PROOF_OF_ADDRESS", "BAD_PROOF_OF_PAYMENT", "SELFIE_WITH_PAPER", "FRAUDULENT_LIVENESS", "OTHER", "REQUESTED_DATA_MISMATCH", "OK", "COMPANY_NOT_DEFINED_STRUCTURE", "COMPANY_NOT_DEFINED_BENEFICIARIES", "COMPANY_NOT_VALIDATED_BENEFICIARIES", "COMPANY_NOT_DEFINED_REPRESENTATIVES", "COMPANY_NOT_VALIDATED_REPRESENTATIVES", "APPLICANT_INTERRUPTED_INTERVIEW", "DOCUMENT_MISSING", "UNSUITABLE_ENV", "CONNECTION_INTERRUPTED", "UNSUPPORTED_LANGUAGE", "THIRD_PARTY_INVOLVED", "CHECK_UNAVAILABLE", "INCORRECT_SOCIAL_NUMBER"]
      }
    },
    isSandbox: {
      description: "Indicates if the credential was generated in a sandbox environment",
      title: "Is Sandbox",
      type: "boolean"
    }
  }
};

/** Generated with `./generate-schemas-ts.sh` */
var schema$6 = {
  description: "Stores the data of the credential",
  title: "Credential subject",
  type: "object",
  required: ["id", "journeyId", "reviewAnswer", "documentType", "entryDate", "entryTime", "personalData"],
  properties: {
    id: {
      description: "Stores the DID of the subject that owns the credential",
      title: "Credential subject ID",
      format: "uri",
      type: "string"
    },
    journeyId: {
      description: "Journey ID of when credential was generated",
      title: "Journey ID",
      type: "string",
      format: "uuid"
    },
    reviewAnswer: {
      description: "Review result from kyc provider",
      title: "Review Result",
      type: "string",
      "enum": ["RED", "YELLOW", "GREEN"]
    },
    reviewRejectType: {
      description: "Review reject type",
      title: "Review Reject Type",
      type: "string",
      "enum": ["FINAL", "RETRY"]
    },
    reviewRejectLabels: {
      description: "Reject labels",
      title: "Reject Labels",
      type: "array",
      items: {
        type: "string",
        "enum": ["FORGERY", "DOCUMENT_TEMPLATE", "LOW_QUALITY", "SPAM", "NOT_DOCUMENT", "SELFIE_MISMATCH", "ID_INVALID", "FOREIGNER", "DUPLICATE", "BAD_AVATAR", "WRONG_USER_REGION", "INCOMPLETE_DOCUMENT", "BLACKLIST", "BLOCKLIST", "UNSATISFACTORY_PHOTOS", "DOCUMENT_PAGE_MISSING", "DOCUMENT_DAMAGED", "REGULATIONS_VIOLATIONS", "INCONSISTENT_PROFILE", "PROBLEMATIC_APPLICANT_DATA", "ADDITIONAL_DOCUMENT_REQUIRED", "AGE_REQUIREMENT_MISMATCH", "EXPERIENCE_REQUIREMENT_MISMATCH", "CRIMINAL", "WRONG_ADDRESS", "GRAPHIC_EDITOR", "DOCUMENT_DEPRIVED", "COMPROMISED_PERSONS", "PEP", "ADVERSE_MEDIA", "FRAUDULENT_PATTERNS", "SANCTIONS", "NOT_ALL_CHECKS_COMPLETED", "FRONT_SIDE_MISSING", "BACK_SIDE_MISSING", "SCREENSHOTS", "BLACK_AND_WHITE", "INCOMPATIBLE_LANGUAGE", "EXPIRATION_DATE", "UNFILLED_ID", "BAD_SELFIE", "BAD_VIDEO_SELFIE", "BAD_FACE_MATCHING", "BAD_PROOF_OF_IDENTITY", "BAD_PROOF_OF_ADDRESS", "BAD_PROOF_OF_PAYMENT", "SELFIE_WITH_PAPER", "FRAUDULENT_LIVENESS", "OTHER", "REQUESTED_DATA_MISMATCH", "OK", "COMPANY_NOT_DEFINED_STRUCTURE", "COMPANY_NOT_DEFINED_BENEFICIARIES", "COMPANY_NOT_VALIDATED_BENEFICIARIES", "COMPANY_NOT_DEFINED_REPRESENTATIVES", "COMPANY_NOT_VALIDATED_REPRESENTATIVES", "APPLICANT_INTERRUPTED_INTERVIEW", "DOCUMENT_MISSING", "UNSUITABLE_ENV", "CONNECTION_INTERRUPTED", "UNSUPPORTED_LANGUAGE", "THIRD_PARTY_INVOLVED", "CHECK_UNAVAILABLE", "INCORRECT_SOCIAL_NUMBER"]
      }
    },
    documentType: {
      description: "Type of the document provided by the credential subject",
      title: "Document Type",
      type: "string",
      "enum": ["ID_CARD", "PASSPORT", "DRIVERS", "RESIDENCE_PERMIT", "UTILITY_BILL", "SELFIE", "VIDEO_SELFIE", "PROFILE_IMAGE", "ID_DOC_PHOTO", "AGREEMENT", "CONTRACT", "DRIVERS_TRANSLATION", "INVESTOR_DOC", "VEHICLE_REGISTRATION_CERTIFICATE", "INCOME_SOURCE", "PAYMENT_METHOD", "BANK_CARD", "COVID_VACCINATION_FORM", "OTHER"]
    },
    entryDate: {
      description: "Entry date associated with the credential",
      title: "Entry Date in integer format of yyyymmdd, example: 20231226 2023 year, 12-December, 26-day",
      type: "integer"
    },
    entryTime: {
      description: "Entry time associated with the credential",
      title: "Entry Time",
      type: "string",
      format: "time"
    },
    personalData: {
      description: "Original data extracted by the provider",
      title: "Original Data",
      type: "object",
      properties: {
        firstName: {
          description: "First name of the credential subject",
          title: "First Name",
          type: "string"
        },
        middleName: {
          description: "Middle name of the credential subject",
          title: "Middle Name",
          type: "string"
        },
        lastName: {
          description: "Last name of the credential subject",
          title: "Last Name",
          type: "string"
        },
        gender: {
          description: "Gender of the credential subject",
          title: "Gender",
          type: "string"
        },
        age: {
          description: "Age of the credential subject",
          title: "Age",
          type: "integer",
          minimum: 0,
          maximum: 125
        },
        citizenship: {
          title: "Citizenship",
          description: "Citizenship status of the credential subject - ISO 3166-1 alpha-3 country code (https://www.iban.com/country-codes)",
          type: "string",
          "enum": ["AFG", "ALB", "DZA", "ASM", "AND", "AGO", "AIA", "ATA", "ATG", "ARG", "ARM", "ABW", "AUS", "AUT", "AZE", "BHS", "BHR", "BGD", "BRB", "BLR", "BEL", "BLZ", "BEN", "BMU", "BTN", "BOL", "BES", "BIH", "BWA", "BVT", "BRA", "IOT", "BRN", "BGR", "BFA", "BDI", "CPV", "KHM", "CMR", "CAN", "CYM", "CAF", "TCD", "CHL", "CHN", "CXR", "CCK", "COL", "COM", "COD", "COG", "COK", "CRI", "HRV", "CUB", "CUW", "CYP", "CZE", "CIV", "DNK", "DJI", "DMA", "DOM", "ECU", "EGY", "SLV", "GNQ", "ERI", "EST", "SWZ", "ETH", "FLK", "FRO", "FJI", "FIN", "FRA", "GUF", "PYF", "ATF", "GAB", "GMB", "GEO", "DEU", "GHA", "GIB", "GRC", "GRL", "GRD", "GLP", "GUM", "GTM", "GGY", "GIN", "GNB", "GUY", "HTI", "HMD", "VAT", "HND", "HKG", "HUN", "ISL", "IND", "IDN", "IRN", "IRQ", "IRL", "IMN", "ISR", "ITA", "JAM", "JPN", "JEY", "JOR", "KAZ", "KEN", "KIR", "PRK", "KOR", "KWT", "KGZ", "LAO", "LVA", "LBN", "LSO", "LBR", "LBY", "LIE", "LTU", "LUX", "MAC", "MDG", "MWI", "MYS", "MDV", "MLI", "MLT", "MHL", "MTQ", "MRT", "MUS", "MYT", "MEX", "FSM", "MDA", "MCO", "MNG", "MNE", "MSR", "MAR", "MOZ", "MMR", "NAM", "NRU", "NPL", "NLD", "NCL", "NZL", "NIC", "NER", "NGA", "NIU", "NFK", "MNP", "NOR", "OMN", "PAK", "PLW", "PSE", "PAN", "PNG", "PRY", "PER", "PHL", "PCN", "POL", "PRT", "PRI", "QAT", "MKD", "ROU", "RUS", "RWA", "REU", "BLM", "SHN", "KNA", "LCA", "MAF", "SPM", "VCT", "WSM", "SMR", "STP", "SAU", "SEN", "SRB", "SYC", "SLE", "SGP", "SXM", "SVK", "SVN", "SLB", "SOM", "ZAF", "SGS", "SSD", "ESP", "LKA", "SDN", "SUR", "SJM", "SWE", "CHE", "SYR", "TWN", "TJK", "TZA", "THA", "TLS", "TGO", "TKL", "TON", "TTO", "TUN", "TUR", "TKM", "TCA", "TUV", "UGA", "UKR", "ARE", "GBR", "UMI", "USA", "URY", "UZB", "VUT", "VEN", "VNM", "VGB", "VIR", "WLF", "ESH", "YEM", "ZMB", "ZWE", "ALA", "ANT", "XKX"]
        },
        country: {
          description: "Country of the credential subject - ISO 3166-1 alpha-3 country code (https://www.iban.com/country-codes)",
          title: "Country",
          type: "string",
          "enum": ["AFG", "ALB", "DZA", "ASM", "AND", "AGO", "AIA", "ATA", "ATG", "ARG", "ARM", "ABW", "AUS", "AUT", "AZE", "BHS", "BHR", "BGD", "BRB", "BLR", "BEL", "BLZ", "BEN", "BMU", "BTN", "BOL", "BES", "BIH", "BWA", "BVT", "BRA", "IOT", "BRN", "BGR", "BFA", "BDI", "CPV", "KHM", "CMR", "CAN", "CYM", "CAF", "TCD", "CHL", "CHN", "CXR", "CCK", "COL", "COM", "COD", "COG", "COK", "CRI", "HRV", "CUB", "CUW", "CYP", "CZE", "CIV", "DNK", "DJI", "DMA", "DOM", "ECU", "EGY", "SLV", "GNQ", "ERI", "EST", "SWZ", "ETH", "FLK", "FRO", "FJI", "FIN", "FRA", "GUF", "PYF", "ATF", "GAB", "GMB", "GEO", "DEU", "GHA", "GIB", "GRC", "GRL", "GRD", "GLP", "GUM", "GTM", "GGY", "GIN", "GNB", "GUY", "HTI", "HMD", "VAT", "HND", "HKG", "HUN", "ISL", "IND", "IDN", "IRN", "IRQ", "IRL", "IMN", "ISR", "ITA", "JAM", "JPN", "JEY", "JOR", "KAZ", "KEN", "KIR", "PRK", "KOR", "KWT", "KGZ", "LAO", "LVA", "LBN", "LSO", "LBR", "LBY", "LIE", "LTU", "LUX", "MAC", "MDG", "MWI", "MYS", "MDV", "MLI", "MLT", "MHL", "MTQ", "MRT", "MUS", "MYT", "MEX", "FSM", "MDA", "MCO", "MNG", "MNE", "MSR", "MAR", "MOZ", "MMR", "NAM", "NRU", "NPL", "NLD", "NCL", "NZL", "NIC", "NER", "NGA", "NIU", "NFK", "MNP", "NOR", "OMN", "PAK", "PLW", "PSE", "PAN", "PNG", "PRY", "PER", "PHL", "PCN", "POL", "PRT", "PRI", "QAT", "MKD", "ROU", "RUS", "RWA", "REU", "BLM", "SHN", "KNA", "LCA", "MAF", "SPM", "VCT", "WSM", "SMR", "STP", "SAU", "SEN", "SRB", "SYC", "SLE", "SGP", "SXM", "SVK", "SVN", "SLB", "SOM", "ZAF", "SGS", "SSD", "ESP", "LKA", "SDN", "SUR", "SJM", "SWE", "CHE", "SYR", "TWN", "TJK", "TZA", "THA", "TLS", "TGO", "TKL", "TON", "TTO", "TUN", "TUR", "TKM", "TCA", "TUV", "UGA", "UKR", "ARE", "GBR", "UMI", "USA", "URY", "UZB", "VUT", "VEN", "VNM", "VGB", "VIR", "WLF", "ESH", "YEM", "ZMB", "ZWE", "ALA", "ANT", "XKX"]
        },
        fullName: {
          description: "Full name of the credential subject",
          title: "Full Name",
          type: "string"
        },
        birthDate: {
          title: "Birth Date",
          description: "Birth Date of the credential subject in integer format of yyyymmdd, example: 20231226 2023 year, 12-December, 26-day",
          type: "integer"
        },
        countryOfBirth: {
          title: "Country of Birth",
          description: "Country of birth of the credential subject - - ISO 3166-1 alpha-3 country code (https://www.iban.com/country-codes)",
          type: "string",
          "enum": ["AFG", "ALB", "DZA", "ASM", "AND", "AGO", "AIA", "ATA", "ATG", "ARG", "ARM", "ABW", "AUS", "AUT", "AZE", "BHS", "BHR", "BGD", "BRB", "BLR", "BEL", "BLZ", "BEN", "BMU", "BTN", "BOL", "BES", "BIH", "BWA", "BVT", "BRA", "IOT", "BRN", "BGR", "BFA", "BDI", "CPV", "KHM", "CMR", "CAN", "CYM", "CAF", "TCD", "CHL", "CHN", "CXR", "CCK", "COL", "COM", "COD", "COG", "COK", "CRI", "HRV", "CUB", "CUW", "CYP", "CZE", "CIV", "DNK", "DJI", "DMA", "DOM", "ECU", "EGY", "SLV", "GNQ", "ERI", "EST", "SWZ", "ETH", "FLK", "FRO", "FJI", "FIN", "FRA", "GUF", "PYF", "ATF", "GAB", "GMB", "GEO", "DEU", "GHA", "GIB", "GRC", "GRL", "GRD", "GLP", "GUM", "GTM", "GGY", "GIN", "GNB", "GUY", "HTI", "HMD", "VAT", "HND", "HKG", "HUN", "ISL", "IND", "IDN", "IRN", "IRQ", "IRL", "IMN", "ISR", "ITA", "JAM", "JPN", "JEY", "JOR", "KAZ", "KEN", "KIR", "PRK", "KOR", "KWT", "KGZ", "LAO", "LVA", "LBN", "LSO", "LBR", "LBY", "LIE", "LTU", "LUX", "MAC", "MDG", "MWI", "MYS", "MDV", "MLI", "MLT", "MHL", "MTQ", "MRT", "MUS", "MYT", "MEX", "FSM", "MDA", "MCO", "MNG", "MNE", "MSR", "MAR", "MOZ", "MMR", "NAM", "NRU", "NPL", "NLD", "NCL", "NZL", "NIC", "NER", "NGA", "NIU", "NFK", "MNP", "NOR", "OMN", "PAK", "PLW", "PSE", "PAN", "PNG", "PRY", "PER", "PHL", "PCN", "POL", "PRT", "PRI", "QAT", "MKD", "ROU", "RUS", "RWA", "REU", "BLM", "SHN", "KNA", "LCA", "MAF", "SPM", "VCT", "WSM", "SMR", "STP", "SAU", "SEN", "SRB", "SYC", "SLE", "SGP", "SXM", "SVK", "SVN", "SLB", "SOM", "ZAF", "SGS", "SSD", "ESP", "LKA", "SDN", "SUR", "SJM", "SWE", "CHE", "SYR", "TWN", "TJK", "TZA", "THA", "TLS", "TGO", "TKL", "TON", "TTO", "TUN", "TUR", "TKM", "TCA", "TUV", "UGA", "UKR", "ARE", "GBR", "UMI", "USA", "URY", "UZB", "VUT", "VEN", "VNM", "VGB", "VIR", "WLF", "ESH", "YEM", "ZMB", "ZWE", "ALA", "ANT", "XKX"]
        },
        stateOfBirth: {
          title: "State of Birth",
          type: "string",
          description: "State of birth of the credential subject"
        }
      }
    },
    isSandbox: {
      description: "Indicates if the credential was generated in a sandbox environment",
      title: "Is Sandbox",
      type: "boolean"
    }
  }
};

/** Generated with `./generate-schemas-ts.sh` */
var schema$5 = {
  description: "Stores the data of the credential",
  title: "Credential subject",
  type: "object",
  required: ["id", "journeyId", "documentType", "entryDate", "entryTime"],
  properties: {
    id: {
      description: "Stores the DID of the subject that owns the credential",
      title: "Credential subject ID",
      format: "uri",
      type: "string"
    },
    journeyId: {
      title: "Journey ID",
      description: "The ID of the journey that this credential is associated with",
      type: "string",
      format: "uuid"
    },
    country: {
      title: "Country",
      description: "The country of residence - ISO 3166-1 alpha-3 country code (https://www.iban.com/country-codes)",
      type: "string",
      "enum": ["AFG", "ALB", "DZA", "ASM", "AND", "AGO", "AIA", "ATA", "ATG", "ARG", "ARM", "ABW", "AUS", "AUT", "AZE", "BHS", "BHR", "BGD", "BRB", "BLR", "BEL", "BLZ", "BEN", "BMU", "BTN", "BOL", "BES", "BIH", "BWA", "BVT", "BRA", "IOT", "BRN", "BGR", "BFA", "BDI", "CPV", "KHM", "CMR", "CAN", "CYM", "CAF", "TCD", "CHL", "CHN", "CXR", "CCK", "COL", "COM", "COD", "COG", "COK", "CRI", "HRV", "CUB", "CUW", "CYP", "CZE", "CIV", "DNK", "DJI", "DMA", "DOM", "ECU", "EGY", "SLV", "GNQ", "ERI", "EST", "SWZ", "ETH", "FLK", "FRO", "FJI", "FIN", "FRA", "GUF", "PYF", "ATF", "GAB", "GMB", "GEO", "DEU", "GHA", "GIB", "GRC", "GRL", "GRD", "GLP", "GUM", "GTM", "GGY", "GIN", "GNB", "GUY", "HTI", "HMD", "VAT", "HND", "HKG", "HUN", "ISL", "IND", "IDN", "IRN", "IRQ", "IRL", "IMN", "ISR", "ITA", "JAM", "JPN", "JEY", "JOR", "KAZ", "KEN", "KIR", "PRK", "KOR", "KWT", "KGZ", "LAO", "LVA", "LBN", "LSO", "LBR", "LBY", "LIE", "LTU", "LUX", "MAC", "MDG", "MWI", "MYS", "MDV", "MLI", "MLT", "MHL", "MTQ", "MRT", "MUS", "MYT", "MEX", "FSM", "MDA", "MCO", "MNG", "MNE", "MSR", "MAR", "MOZ", "MMR", "NAM", "NRU", "NPL", "NLD", "NCL", "NZL", "NIC", "NER", "NGA", "NIU", "NFK", "MNP", "NOR", "OMN", "PAK", "PLW", "PSE", "PAN", "PNG", "PRY", "PER", "PHL", "PCN", "POL", "PRT", "PRI", "QAT", "MKD", "ROU", "RUS", "RWA", "REU", "BLM", "SHN", "KNA", "LCA", "MAF", "SPM", "VCT", "WSM", "SMR", "STP", "SAU", "SEN", "SRB", "SYC", "SLE", "SGP", "SXM", "SVK", "SVN", "SLB", "SOM", "ZAF", "SGS", "SSD", "ESP", "LKA", "SDN", "SUR", "SJM", "SWE", "CHE", "SYR", "TWN", "TJK", "TZA", "THA", "TLS", "TGO", "TKL", "TON", "TTO", "TUN", "TUR", "TKM", "TCA", "TUV", "UGA", "UKR", "ARE", "GBR", "UMI", "USA", "URY", "UZB", "VUT", "VEN", "VNM", "VGB", "VIR", "WLF", "ESH", "YEM", "ZMB", "ZWE", "ALA", "ANT", "XKX"]
    },
    base64: {
      title: "Base64",
      description: "Base64 encoded image of the proof of residence",
      type: "string"
    },
    name: {
      title: "Name",
      description: "Name of the document (e.g. ProofOfResidence.jpg)",
      type: "string"
    },
    documentType: {
      title: "Type",
      description: "Type of the document (e.g. Gas bill, Internet bill, Electricity bill, Rent agreement, Bank statement)",
      type: "string",
      "enum": ["Gas_bill", "Internet_bill", "Electricity_bill", "Rent_agreement", "Bank_statement"]
    },
    entryDate: {
      description: "Entry date associated with the credential",
      title: "Entry Date in integer format of yyyymmdd, example: 20231226 2023 year, 12-December, 26-day",
      type: "integer"
    },
    entryTime: {
      description: "Entry time associated with the credential",
      title: "Entry Time",
      type: "string",
      format: "time"
    },
    mediaType: {
      title: "Media Type",
      description: "Media type of the document (e.g. image/jpeg, image/png, application/pdf)",
      type: "string",
      "enum": ["image/jpeg", "image/jpg", "image/png", "application/pdf"]
    },
    county: {
      title: "County",
      description: "The county of residence",
      type: "string"
    },
    city: {
      title: "City",
      description: "The city of residence",
      type: "string"
    },
    streetName: {
      title: "Street name",
      description: "The street name of residence",
      type: "string"
    },
    postalCode: {
      title: "Postal Code",
      description: "The postal code of residence",
      type: "string"
    },
    isSandbox: {
      description: "Indicates if the credential was generated in a sandbox environment",
      title: "Is Sandbox",
      type: "boolean"
    }
  }
};

/** Generated with `./generate-schemas-ts.sh` */
var schema$4 = {
  description: "Stores the data of the credential",
  title: "Credential subject",
  type: "object",
  required: ["id", "journeyId", "base64", "name", "mediaType", "reviewAnswer", "entryDate", "entryTime"],
  properties: {
    id: {
      description: "Stores the DID of the subject that owns the credential",
      title: "Credential subject ID",
      format: "uri",
      type: "string"
    },
    journeyId: {
      title: "Journey ID",
      description: "The ID of the journey that this credential is associated with",
      type: "string",
      format: "uuid"
    },
    base64: {
      title: "Base64",
      description: "Base64 encoded image of the selfie image",
      type: "string"
    },
    name: {
      title: "Name",
      description: "Name of the docuemnt (e.g. selfie.jpg)",
      type: "string"
    },
    mediaType: {
      title: "Media Type",
      description: "Media type of the document (e.g. image/jpeg, image/png)",
      type: "string",
      "enum": ["image/jpeg", "image/jpg", "application/pdf", "image/png"]
    },
    entryDate: {
      description: "Entry date associated with the credential",
      title: "Entry Date in integer format of yyyymmdd, example: 20231226 2023 year, 12-December, 26-day",
      type: "integer"
    },
    entryTime: {
      description: "Entry time associated with the credential",
      title: "Entry Time",
      type: "string",
      format: "time"
    },
    reviewAnswer: {
      description: "Review result from kyc provider",
      title: "Review Result",
      type: "string",
      "enum": ["RED", "YELLOW", "GREEN"]
    },
    reviewRejectType: {
      description: "Review reject type",
      title: "Review Reject Type",
      type: "string",
      "enum": ["FINAL", "RETRY"]
    },
    reviewRejectLabels: {
      description: "Reject labels",
      title: "Reject Labels",
      type: "array",
      items: {
        type: "string",
        "enum": ["FORGERY", "DOCUMENT_TEMPLATE", "LOW_QUALITY", "SPAM", "NOT_DOCUMENT", "SELFIE_MISMATCH", "ID_INVALID", "FOREIGNER", "DUPLICATE", "BAD_AVATAR", "WRONG_USER_REGION", "INCOMPLETE_DOCUMENT", "BLACKLIST", "BLOCKLIST", "UNSATISFACTORY_PHOTOS", "DOCUMENT_PAGE_MISSING", "DOCUMENT_DAMAGED", "REGULATIONS_VIOLATIONS", "INCONSISTENT_PROFILE", "PROBLEMATIC_APPLICANT_DATA", "ADDITIONAL_DOCUMENT_REQUIRED", "AGE_REQUIREMENT_MISMATCH", "EXPERIENCE_REQUIREMENT_MISMATCH", "CRIMINAL", "WRONG_ADDRESS", "GRAPHIC_EDITOR", "DOCUMENT_DEPRIVED", "COMPROMISED_PERSONS", "PEP", "ADVERSE_MEDIA", "FRAUDULENT_PATTERNS", "SANCTIONS", "NOT_ALL_CHECKS_COMPLETED", "FRONT_SIDE_MISSING", "BACK_SIDE_MISSING", "SCREENSHOTS", "BLACK_AND_WHITE", "INCOMPATIBLE_LANGUAGE", "EXPIRATION_DATE", "UNFILLED_ID", "BAD_SELFIE", "BAD_VIDEO_SELFIE", "BAD_FACE_MATCHING", "BAD_PROOF_OF_IDENTITY", "BAD_PROOF_OF_ADDRESS", "BAD_PROOF_OF_PAYMENT", "SELFIE_WITH_PAPER", "FRAUDULENT_LIVENESS", "OTHER", "REQUESTED_DATA_MISMATCH", "OK", "COMPANY_NOT_DEFINED_STRUCTURE", "COMPANY_NOT_DEFINED_BENEFICIARIES", "COMPANY_NOT_VALIDATED_BENEFICIARIES", "COMPANY_NOT_DEFINED_REPRESENTATIVES", "COMPANY_NOT_VALIDATED_REPRESENTATIVES", "APPLICANT_INTERRUPTED_INTERVIEW", "DOCUMENT_MISSING", "UNSUITABLE_ENV", "CONNECTION_INTERRUPTED", "UNSUPPORTED_LANGUAGE", "THIRD_PARTY_INVOLVED", "CHECK_UNAVAILABLE", "INCORRECT_SOCIAL_NUMBER"]
      }
    },
    isSandbox: {
      description: "Indicates if the credential was generated in a sandbox environment",
      title: "Is Sandbox",
      type: "boolean"
    }
  }
};

/** Generated with `./generate-schemas-ts.sh` */
var schema$3 = {
  description: "Stores the data of the credential",
  title: "Credential subject",
  type: "object",
  required: ["journeyId", "amendmentsData", "originalData", "personalDetails", "id"],
  properties: {
    id: {
      description: "Stores the DID of the subject that owns the credential",
      title: "Credential subject ID",
      format: "uri",
      type: "string"
    },
    journeyId: {
      description: "Journey ID of when credential was generated",
      title: "Journey ID",
      type: "string",
      format: "uuid"
    },
    amendmentsData: {
      type: "object",
      title: "Amendments Data",
      description: "Details related to the amendments made to the original data.",
      properties: {
        data: {
          title: "Amendments Data - Personal Details",
          description: "Personal details manually amended by the holder/user during authentication process.",
          type: "object",
          properties: {
            citizenship: {
              title: "Citizenship",
              description: "The country of citizenship of the credential subject ISO 3166-1 alpha-3 country code (https://www.iban.com/country-codes)",
              type: "string",
              "enum": ["AFG", "ALB", "DZA", "ASM", "AND", "AGO", "AIA", "ATA", "ATG", "ARG", "ARM", "ABW", "AUS", "AUT", "AZE", "BHS", "BHR", "BGD", "BRB", "BLR", "BEL", "BLZ", "BEN", "BMU", "BTN", "BOL", "BES", "BIH", "BWA", "BVT", "BRA", "IOT", "BRN", "BGR", "BFA", "BDI", "CPV", "KHM", "CMR", "CAN", "CYM", "CAF", "TCD", "CHL", "CHN", "CXR", "CCK", "COL", "COM", "COD", "COG", "COK", "CRI", "HRV", "CUB", "CUW", "CYP", "CZE", "CIV", "DNK", "DJI", "DMA", "DOM", "ECU", "EGY", "SLV", "GNQ", "ERI", "EST", "SWZ", "ETH", "FLK", "FRO", "FJI", "FIN", "FRA", "GUF", "PYF", "ATF", "GAB", "GMB", "GEO", "DEU", "GHA", "GIB", "GRC", "GRL", "GRD", "GLP", "GUM", "GTM", "GGY", "GIN", "GNB", "GUY", "HTI", "HMD", "VAT", "HND", "HKG", "HUN", "ISL", "IND", "IDN", "IRN", "IRQ", "IRL", "IMN", "ISR", "ITA", "JAM", "JPN", "JEY", "JOR", "KAZ", "KEN", "KIR", "PRK", "KOR", "KWT", "KGZ", "LAO", "LVA", "LBN", "LSO", "LBR", "LBY", "LIE", "LTU", "LUX", "MAC", "MDG", "MWI", "MYS", "MDV", "MLI", "MLT", "MHL", "MTQ", "MRT", "MUS", "MYT", "MEX", "FSM", "MDA", "MCO", "MNG", "MNE", "MSR", "MAR", "MOZ", "MMR", "NAM", "NRU", "NPL", "NLD", "NCL", "NZL", "NIC", "NER", "NGA", "NIU", "NFK", "MNP", "NOR", "OMN", "PAK", "PLW", "PSE", "PAN", "PNG", "PRY", "PER", "PHL", "PCN", "POL", "PRT", "PRI", "QAT", "MKD", "ROU", "RUS", "RWA", "REU", "BLM", "SHN", "KNA", "LCA", "MAF", "SPM", "VCT", "WSM", "SMR", "STP", "SAU", "SEN", "SRB", "SYC", "SLE", "SGP", "SXM", "SVK", "SVN", "SLB", "SOM", "ZAF", "SGS", "SSD", "ESP", "LKA", "SDN", "SUR", "SJM", "SWE", "CHE", "SYR", "TWN", "TJK", "TZA", "THA", "TLS", "TGO", "TKL", "TON", "TTO", "TUN", "TUR", "TKM", "TCA", "TUV", "UGA", "UKR", "ARE", "GBR", "UMI", "USA", "URY", "UZB", "VUT", "VEN", "VNM", "VGB", "VIR", "WLF", "ESH", "YEM", "ZMB", "ZWE", "ALA"]
            },
            documentType: {
              title: "Document Type",
              description: "The type of document used to verify the credential subject",
              type: "string",
              "enum": ["Agents License", "Driving License", "Electoral Card", "Foreigner Identification Card", "Health Card", "Job License", "Membership Identification Card", "Military Identification Card", "National Identification Card", "Passport", "Proof of Age Card", "Travel Permit", "Visa", "Weapons Licence"]
            },
            firstName: {
              title: "First Name",
              description: "The first name of the credential subject",
              type: "string"
            },
            lastName: {
              title: "Last Name",
              description: "The last name of the credential subject",
              type: "string"
            },
            gender: {
              title: "Gender",
              description: "Gender of the credential subject",
              type: "string"
            },
            addressLine1: {
              title: "Address Line 1",
              description: "Address line 1 of the credential subject",
              type: "string"
            },
            addressLine2: {
              title: "Address Line 2",
              description: "Address line 2 of the credential subject",
              type: "string"
            },
            birthday: {
              title: "Birthday",
              description: "Birthday of the credential subject",
              type: "string",
              format: "date"
            },
            placeOfBirth: {
              title: "Place of Birth",
              description: "Place of birth of the credential subject",
              type: "string"
            },
            countryOfResidence: {
              title: "Country of Residence",
              description: "Country of residence of the credential subject - ISO 3166-1 alpha-3 country code (https://www.iban.com/country-codes)",
              type: "string",
              "enum": ["AFG", "ALB", "DZA", "ASM", "AND", "AGO", "AIA", "ATA", "ATG", "ARG", "ARM", "ABW", "AUS", "AUT", "AZE", "BHS", "BHR", "BGD", "BRB", "BLR", "BEL", "BLZ", "BEN", "BMU", "BTN", "BOL", "BES", "BIH", "BWA", "BVT", "BRA", "IOT", "BRN", "BGR", "BFA", "BDI", "CPV", "KHM", "CMR", "CAN", "CYM", "CAF", "TCD", "CHL", "CHN", "CXR", "CCK", "COL", "COM", "COD", "COG", "COK", "CRI", "HRV", "CUB", "CUW", "CYP", "CZE", "CIV", "DNK", "DJI", "DMA", "DOM", "ECU", "EGY", "SLV", "GNQ", "ERI", "EST", "SWZ", "ETH", "FLK", "FRO", "FJI", "FIN", "FRA", "GUF", "PYF", "ATF", "GAB", "GMB", "GEO", "DEU", "GHA", "GIB", "GRC", "GRL", "GRD", "GLP", "GUM", "GTM", "GGY", "GIN", "GNB", "GUY", "HTI", "HMD", "VAT", "HND", "HKG", "HUN", "ISL", "IND", "IDN", "IRN", "IRQ", "IRL", "IMN", "ISR", "ITA", "JAM", "JPN", "JEY", "JOR", "KAZ", "KEN", "KIR", "PRK", "KOR", "KWT", "KGZ", "LAO", "LVA", "LBN", "LSO", "LBR", "LBY", "LIE", "LTU", "LUX", "MAC", "MDG", "MWI", "MYS", "MDV", "MLI", "MLT", "MHL", "MTQ", "MRT", "MUS", "MYT", "MEX", "FSM", "MDA", "MCO", "MNG", "MNE", "MSR", "MAR", "MOZ", "MMR", "NAM", "NRU", "NPL", "NLD", "NCL", "NZL", "NIC", "NER", "NGA", "NIU", "NFK", "MNP", "NOR", "OMN", "PAK", "PLW", "PSE", "PAN", "PNG", "PRY", "PER", "PHL", "PCN", "POL", "PRT", "PRI", "QAT", "MKD", "ROU", "RUS", "RWA", "REU", "BLM", "SHN", "KNA", "LCA", "MAF", "SPM", "VCT", "WSM", "SMR", "STP", "SAU", "SEN", "SRB", "SYC", "SLE", "SGP", "SXM", "SVK", "SVN", "SLB", "SOM", "ZAF", "SGS", "SSD", "ESP", "LKA", "SDN", "SUR", "SJM", "SWE", "CHE", "SYR", "TWN", "TJK", "TZA", "THA", "TLS", "TGO", "TKL", "TON", "TTO", "TUN", "TUR", "TKM", "TCA", "TUV", "UGA", "UKR", "ARE", "GBR", "UMI", "USA", "URY", "UZB", "VUT", "VEN", "VNM", "VGB", "VIR", "WLF", "ESH", "YEM", "ZMB", "ZWE", "ALA"]
            },
            age: {
              title: "Age",
              description: "Age of the credential subject",
              type: "integer",
              minimum: 0,
              maximum: 125
            },
            city: {
              title: "City",
              description: "City of the credential subject",
              type: "string"
            },
            province: {
              title: "Province",
              description: "Province of the credential subject",
              type: "string"
            },
            postalCode: {
              title: "Postal Code",
              description: "Postal code of the credential subject",
              type: "string"
            },
            emailAddress: {
              title: "Email Address",
              description: "Email address of the credential subject",
              type: "string"
            },
            phoneNumber: {
              title: "Phone Number",
              description: "Phone number of the credential subject",
              type: "string"
            },
            countryOfBirth: {
              title: "Country of Birth",
              description: "Country of birth of the credential subject - ISO 3166-1 alpha-3 country code (https://www.iban.com/country-codes)",
              type: "string",
              "enum": ["AFG", "ALB", "DZA", "ASM", "AND", "AGO", "AIA", "ATA", "ATG", "ARG", "ARM", "ABW", "AUS", "AUT", "AZE", "BHS", "BHR", "BGD", "BRB", "BLR", "BEL", "BLZ", "BEN", "BMU", "BTN", "BOL", "BES", "BIH", "BWA", "BVT", "BRA", "IOT", "BRN", "BGR", "BFA", "BDI", "CPV", "KHM", "CMR", "CAN", "CYM", "CAF", "TCD", "CHL", "CHN", "CXR", "CCK", "COL", "COM", "COD", "COG", "COK", "CRI", "HRV", "CUB", "CUW", "CYP", "CZE", "CIV", "DNK", "DJI", "DMA", "DOM", "ECU", "EGY", "SLV", "GNQ", "ERI", "EST", "SWZ", "ETH", "FLK", "FRO", "FJI", "FIN", "FRA", "GUF", "PYF", "ATF", "GAB", "GMB", "GEO", "DEU", "GHA", "GIB", "GRC", "GRL", "GRD", "GLP", "GUM", "GTM", "GGY", "GIN", "GNB", "GUY", "HTI", "HMD", "VAT", "HND", "HKG", "HUN", "ISL", "IND", "IDN", "IRN", "IRQ", "IRL", "IMN", "ISR", "ITA", "JAM", "JPN", "JEY", "JOR", "KAZ", "KEN", "KIR", "PRK", "KOR", "KWT", "KGZ", "LAO", "LVA", "LBN", "LSO", "LBR", "LBY", "LIE", "LTU", "LUX", "MAC", "MDG", "MWI", "MYS", "MDV", "MLI", "MLT", "MHL", "MTQ", "MRT", "MUS", "MYT", "MEX", "FSM", "MDA", "MCO", "MNG", "MNE", "MSR", "MAR", "MOZ", "MMR", "NAM", "NRU", "NPL", "NLD", "NCL", "NZL", "NIC", "NER", "NGA", "NIU", "NFK", "MNP", "NOR", "OMN", "PAK", "PLW", "PSE", "PAN", "PNG", "PRY", "PER", "PHL", "PCN", "POL", "PRT", "PRI", "QAT", "MKD", "ROU", "RUS", "RWA", "REU", "BLM", "SHN", "KNA", "LCA", "MAF", "SPM", "VCT", "WSM", "SMR", "STP", "SAU", "SEN", "SRB", "SYC", "SLE", "SGP", "SXM", "SVK", "SVN", "SLB", "SOM", "ZAF", "SGS", "SSD", "ESP", "LKA", "SDN", "SUR", "SJM", "SWE", "CHE", "SYR", "TWN", "TJK", "TZA", "THA", "TLS", "TGO", "TKL", "TON", "TTO", "TUN", "TUR", "TKM", "TCA", "TUV", "UGA", "UKR", "ARE", "GBR", "UMI", "USA", "URY", "UZB", "VUT", "VEN", "VNM", "VGB", "VIR", "WLF", "ESH", "YEM", "ZMB", "ZWE", "ALA"]
            },
            middleName: {
              title: "Middle Name",
              description: "Middle name of the credential subject",
              type: "string"
            }
          }
        },
        authenticateSPResult: {
          title: "Authenticate SP Result",
          description: "Result of the authentication request",
          type: "object",
          properties: {
            AuthenticationID: {
              type: "string",
              title: "Authentication ID",
              description: "The ID of the authentication request"
            },
            Timestamp: {
              type: "string",
              format: "date-time",
              title: "Timestamp",
              description: "The timestamp of the authentication request"
            },
            CustomerRef: {
              title: "Customer Reference",
              description: "The customer reference of the authentication request",
              type: "string"
            },
            ProfileID: {
              title: "Profile ID",
              description: "The ID of the profile used for the authentication request",
              type: "string"
            },
            ProfileName: {
              title: "Profile Name",
              description: "The name of the profile used for the authentication request",
              type: "string"
            },
            ProfileVersion: {
              title: "Profile Version",
              description: "The version of the profile used for the authentication request",
              type: "integer"
            },
            ProfileRevision: {
              title: "Profile Revision",
              description: "The revision of the profile used for the authentication request",
              type: "integer"
            },
            ProfileState: {
              title: "Profile State",
              description: "The state of the profile used for the authentication request",
              type: "string"
            },
            ResultCodes: {
              title: "Result Codes",
              description: "The result codes of the authentication request",
              type: "object",
              properties: {
                GlobalItemCheckResultCodes: {
                  type: "array",
                  items: {
                    type: "object",
                    properties: {
                      Name: {
                        type: "string"
                      },
                      Description: {
                        type: "string"
                      },
                      Comment: {
                        type: "object",
                        properties: {
                          GlobalItemCheckResultCode: {
                            type: "array",
                            items: {
                              type: "object",
                              properties: {
                                Description: {
                                  type: "string"
                                },
                                Code: {
                                  type: "integer"
                                }
                              }
                            }
                          }
                        }
                      },
                      Match: {
                        type: "object",
                        properties: {
                          GlobalItemCheckResultCode: {
                            type: "array",
                            items: {
                              type: "object",
                              properties: {
                                Description: {
                                  type: "string"
                                },
                                Code: {
                                  type: "integer"
                                }
                              }
                            }
                          }
                        }
                      },
                      Warning: {
                        type: "object",
                        properties: {
                          GlobalItemCheckResultCode: {
                            type: "array",
                            items: {
                              type: "object",
                              properties: {
                                Description: {
                                  type: "string"
                                },
                                Code: {
                                  type: "integer"
                                }
                              }
                            }
                          }
                        }
                      },
                      Mismatch: {
                        type: "object",
                        properties: {
                          GlobalItemCheckResultCode: {
                            type: "array",
                            items: {
                              type: "object",
                              properties: {
                                Description: {
                                  type: "string"
                                },
                                Code: {
                                  type: "integer"
                                }
                              }
                            }
                          }
                        }
                      },
                      ID: {
                        type: "integer"
                      },
                      Pass: {
                        type: "string"
                      },
                      Address: {
                        type: "string"
                      },
                      Forename: {
                        type: "string"
                      },
                      Surname: {
                        type: "string"
                      },
                      DOB: {
                        type: "string"
                      },
                      Alert: {
                        type: "string"
                      },
                      SanctionsMatches: {
                        type: "object",
                        properties: {
                          GlobalSanctionsMatch: {
                            type: "array",
                            items: {
                              type: "object",
                              properties: {
                                SanctionID: {
                                  type: "string"
                                },
                                Url: {
                                  type: "string"
                                },
                                Rank: {
                                  type: "integer"
                                },
                                CaseID: {
                                  type: "string"
                                },
                                SearchID: {
                                  type: "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            Score: {
              title: "Score",
              description: "The score of the authentication request",
              type: "integer"
            },
            BandText: {
              title: "Band Text",
              description: "The band text of the authentication request",
              type: "string"
            },
            Country: {
              title: "Country",
              description: "Country type of the authentication request",
              type: "string"
            },
            ItemCheckDecisionBands: {
              title: "Item Check Decision Bands",
              description: "The item check decision bands of the authentication request",
              type: "object",
              properties: {
                GlobalItemCheckDecisionBands: {
                  type: "array",
                  items: {
                    type: "object",
                    properties: {
                      ID: {
                        type: "integer"
                      },
                      BandScore: {
                        type: "integer"
                      },
                      BandText: {
                        type: "string"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        pepIntelligenceResult: {
          type: "array",
          items: {
            type: "object",
            properties: {
              Fullname: {
                type: "string"
              },
              Aliases: {
                type: "object",
                properties: {
                  elements: {
                    type: "array",
                    items: {
                      type: "string"
                    }
                  }
                }
              },
              SanctionsAddresses: {
                type: "object",
                properties: {
                  GlobalSanctionsAddress: {
                    type: "array",
                    items: {
                      type: "object",
                      properties: {
                        AddressLine: {
                          type: "string"
                        },
                        City: {
                          type: "string"
                        },
                        Country: {
                          description: "Full name of country",
                          type: "string"
                        },
                        Region: {
                          type: "string"
                        }
                      }
                    }
                  }
                }
              },
              SanctionsDates: {
                type: "object",
                properties: {
                  GlobalSanctionsDate: {
                    type: "object",
                    properties: {
                      DateType: {
                        type: "string"
                      },
                      Day: {
                        type: "integer"
                      },
                      Month: {
                        type: "integer"
                      },
                      Year: {
                        type: "integer"
                      }
                    }
                  }
                }
              },
              IdentityInformation: {
                type: "string"
              },
              SanctionsPositions: {
                type: "object",
                properties: {
                  GlobalSanctionsPosition: {
                    type: "array",
                    items: {
                      type: "object",
                      properties: {
                        Position: {
                          type: "string"
                        },
                        Country: {
                          type: "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        sanctionsEnforcementsResult: {
          type: "array",
          items: {
            type: "object",
            properties: {
              Fullname: {
                type: "string"
              },
              SanctionsBodies: {
                type: "object",
                properties: {
                  elements: {
                    type: "array",
                    items: {
                      type: "integer"
                    }
                  }
                }
              },
              Aliases: {
                type: "object",
                properties: {
                  elements: {
                    type: "array",
                    items: {
                      type: "string"
                    }
                  }
                }
              },
              SanctionsAddresses: {
                type: "object",
                properties: {
                  GlobalSanctionsAddress: {
                    type: "array",
                    items: {
                      type: "object",
                      properties: {
                        AddressLine: {
                          type: "string"
                        },
                        City: {
                          type: "string"
                        },
                        Country: {
                          description: "Full name of country",
                          type: "string"
                        },
                        Region: {
                          type: "string"
                        }
                      }
                    }
                  }
                }
              },
              SanctionsDates: {
                type: "object",
                properties: {
                  GlobalSanctionsDate: {
                    type: "object",
                    properties: {
                      DateType: {
                        type: "string"
                      },
                      Day: {
                        type: "integer"
                      },
                      Month: {
                        type: "integer"
                      },
                      Year: {
                        type: "integer"
                      }
                    }
                  }
                }
              },
              IdentityInformation: {
                type: "string"
              }
            }
          }
        }
      }
    },
    originalData: {
      title: "Original Data",
      description: "Details related to the original data before any amendments",
      type: "object",
      properties: {
        data: {
          title: "Original Data - Personal Details",
          description: "Unmodified personal details imported directly from document during authentication process.",
          type: "object",
          properties: {
            citizenship: {
              title: "Citizenship",
              description: "The country of citizenship of the credential subject ISO 3166-1 alpha-3 country code (https://www.iban.com/country-codes)",
              type: "string",
              "enum": ["AFG", "ALB", "DZA", "ASM", "AND", "AGO", "AIA", "ATA", "ATG", "ARG", "ARM", "ABW", "AUS", "AUT", "AZE", "BHS", "BHR", "BGD", "BRB", "BLR", "BEL", "BLZ", "BEN", "BMU", "BTN", "BOL", "BES", "BIH", "BWA", "BVT", "BRA", "IOT", "BRN", "BGR", "BFA", "BDI", "CPV", "KHM", "CMR", "CAN", "CYM", "CAF", "TCD", "CHL", "CHN", "CXR", "CCK", "COL", "COM", "COD", "COG", "COK", "CRI", "HRV", "CUB", "CUW", "CYP", "CZE", "CIV", "DNK", "DJI", "DMA", "DOM", "ECU", "EGY", "SLV", "GNQ", "ERI", "EST", "SWZ", "ETH", "FLK", "FRO", "FJI", "FIN", "FRA", "GUF", "PYF", "ATF", "GAB", "GMB", "GEO", "DEU", "GHA", "GIB", "GRC", "GRL", "GRD", "GLP", "GUM", "GTM", "GGY", "GIN", "GNB", "GUY", "HTI", "HMD", "VAT", "HND", "HKG", "HUN", "ISL", "IND", "IDN", "IRN", "IRQ", "IRL", "IMN", "ISR", "ITA", "JAM", "JPN", "JEY", "JOR", "KAZ", "KEN", "KIR", "PRK", "KOR", "KWT", "KGZ", "LAO", "LVA", "LBN", "LSO", "LBR", "LBY", "LIE", "LTU", "LUX", "MAC", "MDG", "MWI", "MYS", "MDV", "MLI", "MLT", "MHL", "MTQ", "MRT", "MUS", "MYT", "MEX", "FSM", "MDA", "MCO", "MNG", "MNE", "MSR", "MAR", "MOZ", "MMR", "NAM", "NRU", "NPL", "NLD", "NCL", "NZL", "NIC", "NER", "NGA", "NIU", "NFK", "MNP", "NOR", "OMN", "PAK", "PLW", "PSE", "PAN", "PNG", "PRY", "PER", "PHL", "PCN", "POL", "PRT", "PRI", "QAT", "MKD", "ROU", "RUS", "RWA", "REU", "BLM", "SHN", "KNA", "LCA", "MAF", "SPM", "VCT", "WSM", "SMR", "STP", "SAU", "SEN", "SRB", "SYC", "SLE", "SGP", "SXM", "SVK", "SVN", "SLB", "SOM", "ZAF", "SGS", "SSD", "ESP", "LKA", "SDN", "SUR", "SJM", "SWE", "CHE", "SYR", "TWN", "TJK", "TZA", "THA", "TLS", "TGO", "TKL", "TON", "TTO", "TUN", "TUR", "TKM", "TCA", "TUV", "UGA", "UKR", "ARE", "GBR", "UMI", "USA", "URY", "UZB", "VUT", "VEN", "VNM", "VGB", "VIR", "WLF", "ESH", "YEM", "ZMB", "ZWE", "ALA"]
            },
            documentType: {
              title: "Document Type",
              description: "The type of document used to verify the credential subject",
              type: "string",
              "enum": ["Agents License", "Driving License", "Electoral Card", "Foreigner Identification Card", "Health Card", "Job License", "Membership Identification Card", "Military Identification Card", "National Identification Card", "Passport", "Proof of Age Card", "Travel Permit", "Visa", "Weapons Licence"]
            },
            firstName: {
              title: "First Name",
              description: "The first name of the credential subject",
              type: "string"
            },
            lastName: {
              title: "Last Name",
              description: "The last name of the credential subject",
              type: "string"
            },
            gender: {
              title: "Gender",
              description: "Gender of the credential subject",
              type: "string"
            },
            addressLine1: {
              title: "Address Line 1",
              description: "Address line 1 of the credential subject",
              type: "string"
            },
            addressLine2: {
              title: "Address Line 2",
              description: "Address line 2 of the credential subject",
              type: "string"
            },
            birthday: {
              title: "Birthday",
              description: "Birthday of the credential subject",
              type: "string",
              format: "date"
            },
            placeOfBirth: {
              title: "Place of Birth",
              description: "Place of birth of the credential subject",
              type: "string"
            },
            countryOfResidence: {
              title: "Country of Residence",
              description: "Country of residence of the credential subject - ISO 3166-1 alpha-3 country code (https://www.iban.com/country-codes)",
              type: "string",
              "enum": ["AFG", "ALB", "DZA", "ASM", "AND", "AGO", "AIA", "ATA", "ATG", "ARG", "ARM", "ABW", "AUS", "AUT", "AZE", "BHS", "BHR", "BGD", "BRB", "BLR", "BEL", "BLZ", "BEN", "BMU", "BTN", "BOL", "BES", "BIH", "BWA", "BVT", "BRA", "IOT", "BRN", "BGR", "BFA", "BDI", "CPV", "KHM", "CMR", "CAN", "CYM", "CAF", "TCD", "CHL", "CHN", "CXR", "CCK", "COL", "COM", "COD", "COG", "COK", "CRI", "HRV", "CUB", "CUW", "CYP", "CZE", "CIV", "DNK", "DJI", "DMA", "DOM", "ECU", "EGY", "SLV", "GNQ", "ERI", "EST", "SWZ", "ETH", "FLK", "FRO", "FJI", "FIN", "FRA", "GUF", "PYF", "ATF", "GAB", "GMB", "GEO", "DEU", "GHA", "GIB", "GRC", "GRL", "GRD", "GLP", "GUM", "GTM", "GGY", "GIN", "GNB", "GUY", "HTI", "HMD", "VAT", "HND", "HKG", "HUN", "ISL", "IND", "IDN", "IRN", "IRQ", "IRL", "IMN", "ISR", "ITA", "JAM", "JPN", "JEY", "JOR", "KAZ", "KEN", "KIR", "PRK", "KOR", "KWT", "KGZ", "LAO", "LVA", "LBN", "LSO", "LBR", "LBY", "LIE", "LTU", "LUX", "MAC", "MDG", "MWI", "MYS", "MDV", "MLI", "MLT", "MHL", "MTQ", "MRT", "MUS", "MYT", "MEX", "FSM", "MDA", "MCO", "MNG", "MNE", "MSR", "MAR", "MOZ", "MMR", "NAM", "NRU", "NPL", "NLD", "NCL", "NZL", "NIC", "NER", "NGA", "NIU", "NFK", "MNP", "NOR", "OMN", "PAK", "PLW", "PSE", "PAN", "PNG", "PRY", "PER", "PHL", "PCN", "POL", "PRT", "PRI", "QAT", "MKD", "ROU", "RUS", "RWA", "REU", "BLM", "SHN", "KNA", "LCA", "MAF", "SPM", "VCT", "WSM", "SMR", "STP", "SAU", "SEN", "SRB", "SYC", "SLE", "SGP", "SXM", "SVK", "SVN", "SLB", "SOM", "ZAF", "SGS", "SSD", "ESP", "LKA", "SDN", "SUR", "SJM", "SWE", "CHE", "SYR", "TWN", "TJK", "TZA", "THA", "TLS", "TGO", "TKL", "TON", "TTO", "TUN", "TUR", "TKM", "TCA", "TUV", "UGA", "UKR", "ARE", "GBR", "UMI", "USA", "URY", "UZB", "VUT", "VEN", "VNM", "VGB", "VIR", "WLF", "ESH", "YEM", "ZMB", "ZWE", "ALA"]
            },
            age: {
              title: "Age",
              description: "Age of the credential subject",
              type: "integer",
              minimum: 0,
              maximum: 125
            },
            city: {
              title: "City",
              description: "City of the credential subject",
              type: "string"
            },
            province: {
              title: "Province",
              description: "Province of the credential subject",
              type: "string"
            },
            postalCode: {
              title: "Postal Code",
              description: "Postal code of the credential subject",
              type: "string"
            },
            emailAddress: {
              title: "Email Address",
              description: "Email address of the credential subject",
              type: "string"
            },
            phoneNumber: {
              title: "Phone Number",
              description: "Phone number of the credential subject",
              type: "string"
            },
            countryOfBirth: {
              title: "Country of Birth",
              description: "Country of birth of the credential subject - ISO 3166-1 alpha-3 country code (https://www.iban.com/country-codes)",
              type: "string",
              "enum": ["AFG", "ALB", "DZA", "ASM", "AND", "AGO", "AIA", "ATA", "ATG", "ARG", "ARM", "ABW", "AUS", "AUT", "AZE", "BHS", "BHR", "BGD", "BRB", "BLR", "BEL", "BLZ", "BEN", "BMU", "BTN", "BOL", "BES", "BIH", "BWA", "BVT", "BRA", "IOT", "BRN", "BGR", "BFA", "BDI", "CPV", "KHM", "CMR", "CAN", "CYM", "CAF", "TCD", "CHL", "CHN", "CXR", "CCK", "COL", "COM", "COD", "COG", "COK", "CRI", "HRV", "CUB", "CUW", "CYP", "CZE", "CIV", "DNK", "DJI", "DMA", "DOM", "ECU", "EGY", "SLV", "GNQ", "ERI", "EST", "SWZ", "ETH", "FLK", "FRO", "FJI", "FIN", "FRA", "GUF", "PYF", "ATF", "GAB", "GMB", "GEO", "DEU", "GHA", "GIB", "GRC", "GRL", "GRD", "GLP", "GUM", "GTM", "GGY", "GIN", "GNB", "GUY", "HTI", "HMD", "VAT", "HND", "HKG", "HUN", "ISL", "IND", "IDN", "IRN", "IRQ", "IRL", "IMN", "ISR", "ITA", "JAM", "JPN", "JEY", "JOR", "KAZ", "KEN", "KIR", "PRK", "KOR", "KWT", "KGZ", "LAO", "LVA", "LBN", "LSO", "LBR", "LBY", "LIE", "LTU", "LUX", "MAC", "MDG", "MWI", "MYS", "MDV", "MLI", "MLT", "MHL", "MTQ", "MRT", "MUS", "MYT", "MEX", "FSM", "MDA", "MCO", "MNG", "MNE", "MSR", "MAR", "MOZ", "MMR", "NAM", "NRU", "NPL", "NLD", "NCL", "NZL", "NIC", "NER", "NGA", "NIU", "NFK", "MNP", "NOR", "OMN", "PAK", "PLW", "PSE", "PAN", "PNG", "PRY", "PER", "PHL", "PCN", "POL", "PRT", "PRI", "QAT", "MKD", "ROU", "RUS", "RWA", "REU", "BLM", "SHN", "KNA", "LCA", "MAF", "SPM", "VCT", "WSM", "SMR", "STP", "SAU", "SEN", "SRB", "SYC", "SLE", "SGP", "SXM", "SVK", "SVN", "SLB", "SOM", "ZAF", "SGS", "SSD", "ESP", "LKA", "SDN", "SUR", "SJM", "SWE", "CHE", "SYR", "TWN", "TJK", "TZA", "THA", "TLS", "TGO", "TKL", "TON", "TTO", "TUN", "TUR", "TKM", "TCA", "TUV", "UGA", "UKR", "ARE", "GBR", "UMI", "USA", "URY", "UZB", "VUT", "VEN", "VNM", "VGB", "VIR", "WLF", "ESH", "YEM", "ZMB", "ZWE", "ALA"]
            },
            middleName: {
              title: "Middle Name",
              description: "Middle name of the credential subject",
              type: "string"
            }
          }
        },
        authenticateSPResult: {
          title: "Authenticate SP Result",
          description: "The result of the Authenticate SP check",
          type: "object",
          properties: {
            AuthenticationID: {
              type: "string",
              title: "Authentication ID",
              description: "The ID of the authentication request"
            },
            Timestamp: {
              type: "string",
              format: "date-time",
              title: "Timestamp",
              description: "The date and time of the authentication request"
            },
            CustomerRef: {
              type: "string",
              title: "Customer Reference",
              description: "The customer reference of the authentication request"
            },
            ProfileID: {
              type: "string",
              title: "Profile ID",
              description: "The ID of the profile used for the authentication request"
            },
            ProfileName: {
              type: "string",
              title: "Profile Name",
              description: "The name of the profile used for the authentication request"
            },
            ProfileVersion: {
              type: "integer",
              title: "Profile Version",
              description: "The version of the profile used for the authentication request"
            },
            ProfileRevision: {
              type: "integer",
              title: "Profile Revision",
              description: "The revision of the profile used for the authentication request"
            },
            ProfileState: {
              type: "string",
              title: "Profile State",
              description: "The state of the profile used for the authentication request"
            },
            ResultCodes: {
              type: "object",
              title: "Result Codes",
              description: "The result codes of the authentication request",
              properties: {
                GlobalItemCheckResultCodes: {
                  type: "array",
                  items: {
                    type: "object",
                    properties: {
                      Name: {
                        type: "string"
                      },
                      Description: {
                        type: "string"
                      },
                      Comment: {
                        type: "object",
                        properties: {
                          GlobalItemCheckResultCode: {
                            type: "array",
                            items: {
                              type: "object",
                              properties: {
                                Description: {
                                  type: "string"
                                },
                                Code: {
                                  type: "integer"
                                }
                              }
                            }
                          }
                        }
                      },
                      Match: {
                        type: "object",
                        properties: {
                          GlobalItemCheckResultCode: {
                            type: "array",
                            items: {
                              type: "object",
                              properties: {
                                Description: {
                                  type: "string"
                                },
                                Code: {
                                  type: "integer"
                                }
                              }
                            }
                          }
                        }
                      },
                      Warning: {
                        type: "object",
                        properties: {
                          GlobalItemCheckResultCode: {
                            type: "array",
                            items: {
                              type: "object",
                              properties: {
                                Description: {
                                  type: "string"
                                },
                                Code: {
                                  type: "integer"
                                }
                              }
                            }
                          }
                        }
                      },
                      Mismatch: {
                        type: "object",
                        properties: {
                          GlobalItemCheckResultCode: {
                            type: "array",
                            items: {
                              type: "object",
                              properties: {
                                Description: {
                                  type: "string"
                                },
                                Code: {
                                  type: "integer"
                                }
                              }
                            }
                          }
                        }
                      },
                      ID: {
                        type: "integer"
                      },
                      Pass: {
                        type: "string"
                      },
                      Address: {
                        type: "string"
                      },
                      Forename: {
                        type: "string"
                      },
                      Surname: {
                        type: "string"
                      },
                      DOB: {
                        type: "string"
                      },
                      Alert: {
                        type: "string"
                      },
                      SanctionsMatches: {
                        type: "object",
                        properties: {
                          GlobalSanctionsMatch: {
                            type: "array",
                            items: {
                              type: "object",
                              properties: {
                                SanctionID: {
                                  type: "string"
                                },
                                Url: {
                                  type: "string"
                                },
                                Rank: {
                                  type: "integer"
                                },
                                CaseID: {
                                  type: "string"
                                },
                                SearchID: {
                                  type: "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            },
            Score: {
              type: "integer",
              title: "Score",
              description: "The score of the authentication request"
            },
            BandText: {
              type: "string",
              title: "Band Text",
              description: "The band text of the authentication request"
            },
            Country: {
              type: "string",
              title: "Country",
              description: "The country type of the authentication request"
            }
          }
        },
        pepIntelligenceResult: {
          type: "array",
          title: "PEP Intelligence Result",
          description: "The result of the PEP Intelligence check",
          items: {
            type: "object",
            properties: {
              Fullname: {
                type: "string"
              },
              Aliases: {
                type: "object",
                properties: {
                  elements: {
                    type: "array",
                    items: {
                      type: "string"
                    }
                  }
                }
              },
              SanctionsAddresses: {
                type: "object",
                properties: {
                  GlobalSanctionsAddress: {
                    type: "array",
                    items: {
                      type: "object",
                      properties: {
                        AddressLine: {
                          type: "string"
                        },
                        City: {
                          type: "string"
                        },
                        Country: {
                          description: "Full name of country",
                          type: "string"
                        },
                        Region: {
                          type: "string"
                        }
                      }
                    }
                  }
                }
              },
              SanctionsDates: {
                type: "object",
                properties: {
                  GlobalSanctionsDate: {
                    type: "object",
                    properties: {
                      DateType: {
                        type: "string"
                      },
                      Day: {
                        type: "integer"
                      },
                      Month: {
                        type: "integer"
                      },
                      Year: {
                        type: "integer"
                      }
                    }
                  }
                }
              },
              IdentityInformation: {
                type: "string"
              },
              SanctionsPositions: {
                type: "object",
                properties: {
                  GlobalSanctionsPosition: {
                    type: "array",
                    items: {
                      type: "object",
                      properties: {
                        Position: {
                          type: "string"
                        },
                        Country: {
                          type: "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        sanctionsEnforcementsResult: {
          type: "array",
          title: "Sanctions Enforcements Result",
          description: "The result of the Sanctions Enforcements check",
          items: {
            type: "object",
            properties: {
              Fullname: {
                type: "string"
              },
              SanctionsBodies: {
                type: "object",
                properties: {
                  elements: {
                    type: "array",
                    items: {
                      type: "integer"
                    }
                  }
                }
              },
              Aliases: {
                type: "object",
                properties: {
                  elements: {
                    type: "array",
                    items: {
                      type: "string"
                    }
                  }
                }
              },
              SanctionsAddresses: {
                type: "object",
                properties: {
                  GlobalSanctionsAddress: {
                    type: "array",
                    items: {
                      type: "object",
                      properties: {
                        AddressLine: {
                          type: "string"
                        },
                        City: {
                          type: "string"
                        },
                        Country: {
                          description: "Full name of country",
                          type: "string"
                        },
                        Region: {
                          type: "string"
                        }
                      }
                    }
                  }
                }
              },
              SanctionsDates: {
                type: "object",
                properties: {
                  GlobalSanctionsDate: {
                    type: "object",
                    properties: {
                      DateType: {
                        type: "string"
                      },
                      Day: {
                        type: "integer"
                      },
                      Month: {
                        type: "integer"
                      },
                      Year: {
                        type: "integer"
                      }
                    }
                  }
                }
              },
              IdentityInformation: {
                type: "string"
              }
            }
          }
        }
      }
    },
    personalDetails: {
      title: "Personal Details",
      description: "Personal details of the credential subject",
      type: "object",
      properties: {
        citizenship: {
          title: "Citizenship",
          description: "The country of citizenship of the credential subject ISO 3166-1 alpha-3 country code (https://www.iban.com/country-codes)",
          type: "string",
          "enum": ["AFG", "ALB", "DZA", "ASM", "AND", "AGO", "AIA", "ATA", "ATG", "ARG", "ARM", "ABW", "AUS", "AUT", "AZE", "BHS", "BHR", "BGD", "BRB", "BLR", "BEL", "BLZ", "BEN", "BMU", "BTN", "BOL", "BES", "BIH", "BWA", "BVT", "BRA", "IOT", "BRN", "BGR", "BFA", "BDI", "CPV", "KHM", "CMR", "CAN", "CYM", "CAF", "TCD", "CHL", "CHN", "CXR", "CCK", "COL", "COM", "COD", "COG", "COK", "CRI", "HRV", "CUB", "CUW", "CYP", "CZE", "CIV", "DNK", "DJI", "DMA", "DOM", "ECU", "EGY", "SLV", "GNQ", "ERI", "EST", "SWZ", "ETH", "FLK", "FRO", "FJI", "FIN", "FRA", "GUF", "PYF", "ATF", "GAB", "GMB", "GEO", "DEU", "GHA", "GIB", "GRC", "GRL", "GRD", "GLP", "GUM", "GTM", "GGY", "GIN", "GNB", "GUY", "HTI", "HMD", "VAT", "HND", "HKG", "HUN", "ISL", "IND", "IDN", "IRN", "IRQ", "IRL", "IMN", "ISR", "ITA", "JAM", "JPN", "JEY", "JOR", "KAZ", "KEN", "KIR", "PRK", "KOR", "KWT", "KGZ", "LAO", "LVA", "LBN", "LSO", "LBR", "LBY", "LIE", "LTU", "LUX", "MAC", "MDG", "MWI", "MYS", "MDV", "MLI", "MLT", "MHL", "MTQ", "MRT", "MUS", "MYT", "MEX", "FSM", "MDA", "MCO", "MNG", "MNE", "MSR", "MAR", "MOZ", "MMR", "NAM", "NRU", "NPL", "NLD", "NCL", "NZL", "NIC", "NER", "NGA", "NIU", "NFK", "MNP", "NOR", "OMN", "PAK", "PLW", "PSE", "PAN", "PNG", "PRY", "PER", "PHL", "PCN", "POL", "PRT", "PRI", "QAT", "MKD", "ROU", "RUS", "RWA", "REU", "BLM", "SHN", "KNA", "LCA", "MAF", "SPM", "VCT", "WSM", "SMR", "STP", "SAU", "SEN", "SRB", "SYC", "SLE", "SGP", "SXM", "SVK", "SVN", "SLB", "SOM", "ZAF", "SGS", "SSD", "ESP", "LKA", "SDN", "SUR", "SJM", "SWE", "CHE", "SYR", "TWN", "TJK", "TZA", "THA", "TLS", "TGO", "TKL", "TON", "TTO", "TUN", "TUR", "TKM", "TCA", "TUV", "UGA", "UKR", "ARE", "GBR", "UMI", "USA", "URY", "UZB", "VUT", "VEN", "VNM", "VGB", "VIR", "WLF", "ESH", "YEM", "ZMB", "ZWE", "ALA"]
        },
        documentType: {
          title: "Document Type",
          description: "The type of document used to verify the credential subject",
          type: "string",
          "enum": ["Agents License", "Driving License", "Electoral Card", "Foreigner Identification Card", "Health Card", "Job License", "Membership Identification Card", "Military Identification Card", "National Identification Card", "Passport", "Proof of Age Card", "Travel Permit", "Visa", "Weapons Licence"]
        },
        firstName: {
          title: "First Name",
          description: "The first name of the credential subject",
          type: "string"
        },
        lastName: {
          title: "Last Name",
          description: "The last name of the credential subject",
          type: "string"
        },
        gender: {
          title: "Gender",
          description: "Gender of the credential subject",
          type: "string"
        },
        addressLine1: {
          title: "Address Line 1",
          description: "Address line 1 of the credential subject",
          type: "string"
        },
        addressLine2: {
          title: "Address Line 2",
          description: "Address line 2 of the credential subject",
          type: "string"
        },
        birthday: {
          title: "Birthday",
          description: "Birthday of the credential subject",
          type: "string",
          format: "date"
        },
        placeOfBirth: {
          title: "Place of Birth",
          description: "Place of birth of the credential subject",
          type: "string"
        },
        countryOfResidence: {
          title: "Country of Residence",
          description: "Country of residence of the credential subject - ISO 3166-1 alpha-3 country code (https://www.iban.com/country-codes)",
          type: "string",
          "enum": ["AFG", "ALB", "DZA", "ASM", "AND", "AGO", "AIA", "ATA", "ATG", "ARG", "ARM", "ABW", "AUS", "AUT", "AZE", "BHS", "BHR", "BGD", "BRB", "BLR", "BEL", "BLZ", "BEN", "BMU", "BTN", "BOL", "BES", "BIH", "BWA", "BVT", "BRA", "IOT", "BRN", "BGR", "BFA", "BDI", "CPV", "KHM", "CMR", "CAN", "CYM", "CAF", "TCD", "CHL", "CHN", "CXR", "CCK", "COL", "COM", "COD", "COG", "COK", "CRI", "HRV", "CUB", "CUW", "CYP", "CZE", "CIV", "DNK", "DJI", "DMA", "DOM", "ECU", "EGY", "SLV", "GNQ", "ERI", "EST", "SWZ", "ETH", "FLK", "FRO", "FJI", "FIN", "FRA", "GUF", "PYF", "ATF", "GAB", "GMB", "GEO", "DEU", "GHA", "GIB", "GRC", "GRL", "GRD", "GLP", "GUM", "GTM", "GGY", "GIN", "GNB", "GUY", "HTI", "HMD", "VAT", "HND", "HKG", "HUN", "ISL", "IND", "IDN", "IRN", "IRQ", "IRL", "IMN", "ISR", "ITA", "JAM", "JPN", "JEY", "JOR", "KAZ", "KEN", "KIR", "PRK", "KOR", "KWT", "KGZ", "LAO", "LVA", "LBN", "LSO", "LBR", "LBY", "LIE", "LTU", "LUX", "MAC", "MDG", "MWI", "MYS", "MDV", "MLI", "MLT", "MHL", "MTQ", "MRT", "MUS", "MYT", "MEX", "FSM", "MDA", "MCO", "MNG", "MNE", "MSR", "MAR", "MOZ", "MMR", "NAM", "NRU", "NPL", "NLD", "NCL", "NZL", "NIC", "NER", "NGA", "NIU", "NFK", "MNP", "NOR", "OMN", "PAK", "PLW", "PSE", "PAN", "PNG", "PRY", "PER", "PHL", "PCN", "POL", "PRT", "PRI", "QAT", "MKD", "ROU", "RUS", "RWA", "REU", "BLM", "SHN", "KNA", "LCA", "MAF", "SPM", "VCT", "WSM", "SMR", "STP", "SAU", "SEN", "SRB", "SYC", "SLE", "SGP", "SXM", "SVK", "SVN", "SLB", "SOM", "ZAF", "SGS", "SSD", "ESP", "LKA", "SDN", "SUR", "SJM", "SWE", "CHE", "SYR", "TWN", "TJK", "TZA", "THA", "TLS", "TGO", "TKL", "TON", "TTO", "TUN", "TUR", "TKM", "TCA", "TUV", "UGA", "UKR", "ARE", "GBR", "UMI", "USA", "URY", "UZB", "VUT", "VEN", "VNM", "VGB", "VIR", "WLF", "ESH", "YEM", "ZMB", "ZWE", "ALA"]
        },
        age: {
          title: "Age",
          description: "Age of the credential subject",
          type: "integer",
          minimum: 0,
          maximum: 125
        },
        city: {
          title: "City",
          description: "City of the credential subject",
          type: "string"
        },
        province: {
          title: "Province",
          description: "Province of the credential subject",
          type: "string"
        },
        postalCode: {
          title: "Postal Code",
          description: "Postal code of the credential subject",
          type: "string"
        },
        emailAddress: {
          title: "Email Address",
          description: "Email address of the credential subject",
          type: "string"
        },
        phoneNumber: {
          title: "Phone Number",
          description: "Phone number of the credential subject",
          type: "string"
        },
        countryOfBirth: {
          title: "Country of Birth",
          description: "Country of birth of the credential subject - ISO 3166-1 alpha-3 country code (https://www.iban.com/country-codes)",
          type: "string",
          "enum": ["AFG", "ALB", "DZA", "ASM", "AND", "AGO", "AIA", "ATA", "ATG", "ARG", "ARM", "ABW", "AUS", "AUT", "AZE", "BHS", "BHR", "BGD", "BRB", "BLR", "BEL", "BLZ", "BEN", "BMU", "BTN", "BOL", "BES", "BIH", "BWA", "BVT", "BRA", "IOT", "BRN", "BGR", "BFA", "BDI", "CPV", "KHM", "CMR", "CAN", "CYM", "CAF", "TCD", "CHL", "CHN", "CXR", "CCK", "COL", "COM", "COD", "COG", "COK", "CRI", "HRV", "CUB", "CUW", "CYP", "CZE", "CIV", "DNK", "DJI", "DMA", "DOM", "ECU", "EGY", "SLV", "GNQ", "ERI", "EST", "SWZ", "ETH", "FLK", "FRO", "FJI", "FIN", "FRA", "GUF", "PYF", "ATF", "GAB", "GMB", "GEO", "DEU", "GHA", "GIB", "GRC", "GRL", "GRD", "GLP", "GUM", "GTM", "GGY", "GIN", "GNB", "GUY", "HTI", "HMD", "VAT", "HND", "HKG", "HUN", "ISL", "IND", "IDN", "IRN", "IRQ", "IRL", "IMN", "ISR", "ITA", "JAM", "JPN", "JEY", "JOR", "KAZ", "KEN", "KIR", "PRK", "KOR", "KWT", "KGZ", "LAO", "LVA", "LBN", "LSO", "LBR", "LBY", "LIE", "LTU", "LUX", "MAC", "MDG", "MWI", "MYS", "MDV", "MLI", "MLT", "MHL", "MTQ", "MRT", "MUS", "MYT", "MEX", "FSM", "MDA", "MCO", "MNG", "MNE", "MSR", "MAR", "MOZ", "MMR", "NAM", "NRU", "NPL", "NLD", "NCL", "NZL", "NIC", "NER", "NGA", "NIU", "NFK", "MNP", "NOR", "OMN", "PAK", "PLW", "PSE", "PAN", "PNG", "PRY", "PER", "PHL", "PCN", "POL", "PRT", "PRI", "QAT", "MKD", "ROU", "RUS", "RWA", "REU", "BLM", "SHN", "KNA", "LCA", "MAF", "SPM", "VCT", "WSM", "SMR", "STP", "SAU", "SEN", "SRB", "SYC", "SLE", "SGP", "SXM", "SVK", "SVN", "SLB", "SOM", "ZAF", "SGS", "SSD", "ESP", "LKA", "SDN", "SUR", "SJM", "SWE", "CHE", "SYR", "TWN", "TJK", "TZA", "THA", "TLS", "TGO", "TKL", "TON", "TTO", "TUN", "TUR", "TKM", "TCA", "TUV", "UGA", "UKR", "ARE", "GBR", "UMI", "USA", "URY", "UZB", "VUT", "VEN", "VNM", "VGB", "VIR", "WLF", "ESH", "YEM", "ZMB", "ZWE", "ALA"]
        },
        middleName: {
          title: "Middle Name",
          description: "Middle name of the credential subject",
          type: "string"
        }
      }
    }
  }
};

/** Generated with `./generate-schemas-ts.sh` */
var schema$2 = {
  description: "Stores the data of the credential",
  title: "Credential subject",
  type: "object",
  required: ["journeyId", "id"],
  properties: {
    id: {
      description: "Stores the DID of the subject that owns the credential",
      title: "Credential subject ID",
      format: "uri",
      type: "string"
    },
    journeyId: {
      description: "Journey ID of when credential was generated",
      title: "Journey ID",
      type: "string",
      format: "uuid"
    },
    highLevelResult: {
      description: "High level result of the kyc check",
      title: "High Level Result",
      type: "string",
      "enum": ["Refer", "NotAccepted", "Notsupported", "Passed", "Refer", "Undefined"]
    },
    firstName: {
      description: "First name of the credential subject",
      title: "First Name",
      type: "string"
    },
    middleName: {
      description: "Middle name of the credential subject",
      title: "Middle Name",
      type: "string"
    },
    lastName: {
      description: "Last name of the credential subject",
      title: "Last Name",
      type: "string"
    },
    gender: {
      description: "Gender of the credential subject",
      title: "Gender",
      type: "string"
    },
    age: {
      description: "Age of the credential subject",
      title: "Age",
      type: "integer",
      minimum: 0,
      maximum: 125
    },
    citizenship: {
      description: "Citizenship status of the credential subject - ISO 3166-1 alpha-3 country code (https://www.iban.com/country-codes)",
      title: "Citizenship",
      type: "string",
      "enum": ["AFG", "ALB", "DZA", "ASM", "AND", "AGO", "AIA", "ATA", "ATG", "ARG", "ARM", "ABW", "AUS", "AUT", "AZE", "BHS", "BHR", "BGD", "BRB", "BLR", "BEL", "BLZ", "BEN", "BMU", "BTN", "BOL", "BES", "BIH", "BWA", "BVT", "BRA", "IOT", "BRN", "BGR", "BFA", "BDI", "CPV", "KHM", "CMR", "CAN", "CYM", "CAF", "TCD", "CHL", "CHN", "CXR", "CCK", "COL", "COM", "COD", "COG", "COK", "CRI", "HRV", "CUB", "CUW", "CYP", "CZE", "CIV", "DNK", "DJI", "DMA", "DOM", "ECU", "EGY", "SLV", "GNQ", "ERI", "EST", "SWZ", "ETH", "FLK", "FRO", "FJI", "FIN", "FRA", "GUF", "PYF", "ATF", "GAB", "GMB", "GEO", "DEU", "GHA", "GIB", "GRC", "GRL", "GRD", "GLP", "GUM", "GTM", "GGY", "GIN", "GNB", "GUY", "HTI", "HMD", "VAT", "HND", "HKG", "HUN", "ISL", "IND", "IDN", "IRN", "IRQ", "IRL", "IMN", "ISR", "ITA", "JAM", "JPN", "JEY", "JOR", "KAZ", "KEN", "KIR", "PRK", "KOR", "KWT", "KGZ", "LAO", "LVA", "LBN", "LSO", "LBR", "LBY", "LIE", "LTU", "LUX", "MAC", "MDG", "MWI", "MYS", "MDV", "MLI", "MLT", "MHL", "MTQ", "MRT", "MUS", "MYT", "MEX", "FSM", "MDA", "MCO", "MNG", "MNE", "MSR", "MAR", "MOZ", "MMR", "NAM", "NRU", "NPL", "NLD", "NCL", "NZL", "NIC", "NER", "NGA", "NIU", "NFK", "MNP", "NOR", "OMN", "PAK", "PLW", "PSE", "PAN", "PNG", "PRY", "PER", "PHL", "PCN", "POL", "PRT", "PRI", "QAT", "MKD", "ROU", "RUS", "RWA", "REU", "BLM", "SHN", "KNA", "LCA", "MAF", "SPM", "VCT", "WSM", "SMR", "STP", "SAU", "SEN", "SRB", "SYC", "SLE", "SGP", "SXM", "SVK", "SVN", "SLB", "SOM", "ZAF", "SGS", "SSD", "ESP", "LKA", "SDN", "SUR", "SJM", "SWE", "CHE", "SYR", "TWN", "TJK", "TZA", "THA", "TLS", "TGO", "TKL", "TON", "TTO", "TUN", "TUR", "TKM", "TCA", "TUV", "UGA", "UKR", "ARE", "GBR", "UMI", "USA", "URY", "UZB", "VUT", "VEN", "VNM", "VGB", "VIR", "WLF", "ESH", "YEM", "ZMB", "ZWE", "ALA"]
    },
    documentCategory: {
      description: "Category of the document provided by the credential subject",
      title: "Document Category",
      type: "string"
    },
    documentName: {
      description: "Name of the document provided by the credential subject",
      title: "Document Name",
      type: "string"
    },
    documentSide: {
      description: "Side of the document provided by the credential subject",
      title: "Document Side",
      type: "string",
      "enum": ["Front", "Back"]
    },
    documentType: {
      description: "Type of the document provided by the credential subject",
      title: "Document Type",
      type: "string",
      "enum": ["Agents License", "Driving License", "Electoral Card", "Foreigner Identification Card", "Health Card", "Job License", "Membership Identification Card", "Military Identification Card", "National Identification Card", "Passport", "Proof of Age Card", "Travel Permit", "Visa", "Weapons Licence"]
    },
    entryDate: {
      description: "Entry date associated with the credential",
      title: "Entry Date",
      type: "string",
      format: "date"
    },
    entryTime: {
      description: "Entry time associated with the credential",
      title: "Entry Time",
      type: "string",
      format: "time"
    },
    fullName: {
      description: "Full name of the credential subject",
      title: "Full Name",
      type: "string"
    },
    addressLine1: {
      description: "First line of the address of the credential subject",
      title: "Address Line 1",
      type: "string"
    },
    addressLine2: {
      description: "Second line of the address of the credential subject",
      title: "Address Line 2",
      type: "string"
    },
    birthDate: {
      description: "Date of birth of the credential subject",
      title: "Birth Date",
      type: "string",
      format: "date"
    },
    birthPlace: {
      type: "string",
      nullable: true
    },
    highLevelResultDetails: {
      description: "Detailed results of the high level KYC check",
      title: "High Level Result Details",
      type: "object",
      properties: {
        documentOverallValidation: {
          description: "Overall validation status of the document",
          title: "Document Overall Validation",
          type: "string",
          "enum": ["FAILED", "NOTNEEDED", "PASSED", "SKIPPED", "NEEDED"]
        },
        documentBlockingPolicy: {
          description: "Blocking policy of the document",
          title: "Document Blocking Policy",
          type: "string",
          "enum": ["FAILED", "NOTNEEDED", "PASSED", "SKIPPED", "NEEDED"]
        },
        documentExpiry: {
          description: "Expiry status of the document",
          title: "Document Expiry",
          type: "string",
          "enum": ["FAILED", "NOTNEEDED", "PASSED", "SKIPPED", "NEEDED"]
        },
        documentSupport: {
          description: "Support status of the document",
          title: "Document Support",
          type: "string",
          "enum": ["FAILED", "NOTNEEDED", "PASSED", "SKIPPED", "NEEDED"]
        },
        documentValidation: {
          description: "Validation status of the document",
          title: "Document Validation",
          type: "string",
          "enum": ["FAILED", "NOTNEEDED", "PASSED", "SKIPPED", "NEEDED"]
        },
        faceMatchValidation: {
          description: "Validation status of face match",
          title: "Face Match Validation",
          type: "string",
          "enum": ["FAILED", "NOTNEEDED", "PASSED", "SKIPPED", "NEEDED"]
        },
        accumulativeLivenessResult: {
          description: "Result of accumulative liveness check",
          title: "Accumulative Liveness Result",
          type: "string",
          "enum": ["FAILED", "NOTNEEDED", "PASSED", "SKIPPED", "NEEDED"]
        }
      }
    },
    faceMatchScore: {
      description: "Score for the face match validation",
      title: "Face Match Score",
      type: "string"
    },
    qualityCheckDetails: {
      description: "Details of quality checks performed",
      title: "Quality Check Details",
      type: "array",
      items: {
        description: "Quality check item details",
        title: "Quality Check Item",
        type: "object",
        properties: {
          id: {
            description: "ID of the quality check item",
            title: "Quality Check Item ID",
            type: "string"
          },
          title: {
            description: "Title of the quality check item",
            title: "Quality Check Item Title",
            type: "string"
          },
          description: {
            description: "Description of the quality check item",
            title: "Quality Check Item Description",
            type: "string"
          },
          state: {
            description: "State of the quality check item",
            title: "Quality Check Item State",
            type: "integer"
          }
        }
      }
    },
    validationDetails: {
      description: "Details of the validation performed",
      title: "Validation Details",
      type: "array",
      items: {
        description: "Details of a specific validation item",
        title: "Validation Item",
        type: "object",
        properties: {
          name: {
            description: "Name of the validation item",
            title: "Validation Item Name",
            type: "string"
          },
          description: {
            description: "Detailed description of the validation item",
            title: "Validation Item Description",
            type: "string"
          },
          result: {
            description: "Result code of the validation",
            title: "Validation Result Code",
            type: "integer"
          }
        }
      }
    }
  }
};

/** Generated with `./generate-schemas-ts.sh` */
var schema$1 = {
  description: "Stores the data of the credential",
  title: "Credential subject",
  type: "object",
  required: ["id", "journeyId", "base64", "name", "documentType"],
  properties: {
    id: {
      description: "Stores the DID of the subject that owns the credential",
      title: "Credential subject ID",
      format: "uri",
      type: "string"
    },
    journeyId: {
      title: "Journey ID",
      description: "The ID of the journey that this credential is associated with",
      type: "string",
      format: "uuid"
    },
    base64: {
      title: "Base64",
      description: "Base64 encoded image of the passport image",
      type: "string",
      format: "base64"
    },
    name: {
      title: "Name",
      description: "Name of the docuemnt (e.g. passport.jpg)",
      type: "string"
    },
    documentType: {
      title: "Type",
      description: "Type of the document (e.g. image/jpeg, image/png)",
      type: "string"
    }
  }
};

/** Generated with `./generate-schemas-ts.sh` */
var schema = {
  description: "Stores the data of the credential",
  title: "Credential subject",
  type: "object",
  properties: {
    id: {
      description: "Stores the DID of the subject that owns the credential",
      title: "Credential subject ID",
      format: "uri",
      type: "string"
    },
    journeyId: {
      title: "Journey ID",
      description: "The ID of the journey that this credential is associated with",
      type: "string",
      format: "uuid"
    },
    base64: {
      title: "Base64",
      description: "Base64 encoded image of the selfie image",
      type: "string",
      format: "base64"
    },
    name: {
      title: "Name",
      description: "Name of the docuemnt (e.g. selfie.jpg)",
      type: "string"
    },
    documentType: {
      title: "Type",
      description: "Type of the document (e.g. image/jpeg, image/png)",
      type: "string"
    }
  },
  required: ["id", "journeyId", "base64", "name", "documentType"]
};

// need to shift this type to use discriminated unions (type + availableOperators )
// also really should be referencing the operators from vc-schemas

var schemaMap = {
  IDInformation: schema$6,
  IDImage: schema$7,
  SelfieImage: schema$4,
  AMLScreeningsResults: schema,
  ProofOfResidence: schema$5,
  ID3: schema$3,
  IDScan: schema$2,
  IDScanSelfie: schema,
  IDScanPassport: schema$1
};
var getAvailableFields = function getAvailableFields(props) {
  var credentialType = props.credentialType;
  var credentialSchema = schemaMap[credentialType];
  if (!credentialSchema) {
    throw new Error("Credential type ".concat(credentialType, " not supported"));
  }
  return extractFields({
    obj: credentialSchema,
    credentialType: credentialType
  });
};
var extractFields = function extractFields(props) {
  var obj = props.obj,
    currentPath = props.currentPath,
    credentialType = props.credentialType;
  var fields = [];
  var _loop = function _loop() {
    var property = obj.properties[key];
    if (!property) return 1; // continue
    // Skip if property is undefined

    var newPath = currentPath ? "".concat(currentPath, ".").concat(key) : "".concat(credentialType, ".credentialSubject.").concat(key);
    if (property.type === "object") {
      // Recursively handle nested objects
      fields = fields.concat(extractFields({
        obj: property,
        currentPath: newPath,
        credentialType: credentialType
      }));
    } else if (SupportedType.safeParse(property.type).success) {
      var _property$nullable;
      fields.push({
        fieldName: key,
        value: key.replace(/([a-z])([A-Z])/g, "$1 $2"),
        path: newPath,
        type: property.type,
        format: property.format,
        nullable: (_property$nullable = property.nullable) !== null && _property$nullable !== void 0 ? _property$nullable : false,
        availableOperators: function () {
          switch (property.type) {
            case "string":
              return _toConsumableArray(STRING_OPERATORS);
            case "integer":
              return _toConsumableArray(NUMERIC_OPERATORS);
            case "number":
              return _toConsumableArray(NUMERIC_OPERATORS);
            case "boolean":
              return _toConsumableArray(BOOLEAN_OPERATORS);
            case "array":
              return _toConsumableArray(ARRAY_OPERATORS);
            default:
              throw new Error("Discovered unhandled type: ".concat(JSON.stringify(property)));
          }
        }()
      });
    } else {
      throw new Error("Discovered unhandled type: ".concat(property.type));
    }
  };
  for (var key in obj.properties) {
    if (_loop()) continue;
  }
  return fields;
};

export { VC_JSON_SCHEMA_MAP, cleanObject, getAvailableFields, getCredentialSchemaLocation };
