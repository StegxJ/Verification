import { z } from "zod";
export declare const CredentialStatusTypePID: z.ZodEnum<["SparseMerkleTreeProof", "Iden3ReverseSparseMerkleTreeProof", "Iden3commRevocationStatusV1.0", "Iden3OnchainSparseMerkleTreeProof2023"]>;
export declare const CredentialStatusPID: z.ZodObject<{
    id: z.ZodString;
    type: z.ZodEnum<["SparseMerkleTreeProof", "Iden3ReverseSparseMerkleTreeProof", "Iden3commRevocationStatusV1.0", "Iden3OnchainSparseMerkleTreeProof2023"]>;
    revocationNonce: z.ZodOptional<z.ZodNumber>;
}, "strip", z.ZodTypeAny, {
    id: string;
    type: "SparseMerkleTreeProof" | "Iden3ReverseSparseMerkleTreeProof" | "Iden3commRevocationStatusV1.0" | "Iden3OnchainSparseMerkleTreeProof2023";
    revocationNonce?: number | undefined;
}, {
    id: string;
    type: "SparseMerkleTreeProof" | "Iden3ReverseSparseMerkleTreeProof" | "Iden3commRevocationStatusV1.0" | "Iden3OnchainSparseMerkleTreeProof2023";
    revocationNonce?: number | undefined;
}>;
export declare const CredentialSchemaPID: z.ZodObject<{
    id: z.ZodString;
    type: z.ZodString;
}, "strip", z.ZodTypeAny, {
    id: string;
    type: string;
}, {
    id: string;
    type: string;
}>;
export declare const GenericVerifiableCredentialSchema: z.ZodObject<{
    id: z.ZodString;
    "@context": z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    type: z.ZodArray<z.ZodString, "many">;
    expirationDate: z.ZodOptional<z.ZodString>;
    issuanceDate: z.ZodOptional<z.ZodString>;
    credentialSubject: z.ZodRecord<z.ZodString, z.ZodAny>;
    credentialStatus: z.ZodObject<{
        id: z.ZodString;
        type: z.ZodEnum<["SparseMerkleTreeProof", "Iden3ReverseSparseMerkleTreeProof", "Iden3commRevocationStatusV1.0", "Iden3OnchainSparseMerkleTreeProof2023"]>;
        revocationNonce: z.ZodOptional<z.ZodNumber>;
    }, "strip", z.ZodTypeAny, {
        id: string;
        type: "SparseMerkleTreeProof" | "Iden3ReverseSparseMerkleTreeProof" | "Iden3commRevocationStatusV1.0" | "Iden3OnchainSparseMerkleTreeProof2023";
        revocationNonce?: number | undefined;
    }, {
        id: string;
        type: "SparseMerkleTreeProof" | "Iden3ReverseSparseMerkleTreeProof" | "Iden3commRevocationStatusV1.0" | "Iden3OnchainSparseMerkleTreeProof2023";
        revocationNonce?: number | undefined;
    }>;
    issuer: z.ZodString;
    credentialSchema: z.ZodObject<{
        id: z.ZodString;
        type: z.ZodString;
    }, "strip", z.ZodTypeAny, {
        id: string;
        type: string;
    }, {
        id: string;
        type: string;
    }>;
    proof: z.ZodAny;
}, "strip", z.ZodTypeAny, {
    id: string;
    type: string[];
    credentialSubject: Record<string, any>;
    credentialStatus: {
        id: string;
        type: "SparseMerkleTreeProof" | "Iden3ReverseSparseMerkleTreeProof" | "Iden3commRevocationStatusV1.0" | "Iden3OnchainSparseMerkleTreeProof2023";
        revocationNonce?: number | undefined;
    };
    issuer: string;
    credentialSchema: {
        id: string;
        type: string;
    };
    "@context"?: string[] | undefined;
    expirationDate?: string | undefined;
    issuanceDate?: string | undefined;
    proof?: any;
}, {
    id: string;
    type: string[];
    credentialSubject: Record<string, any>;
    credentialStatus: {
        id: string;
        type: "SparseMerkleTreeProof" | "Iden3ReverseSparseMerkleTreeProof" | "Iden3commRevocationStatusV1.0" | "Iden3OnchainSparseMerkleTreeProof2023";
        revocationNonce?: number | undefined;
    };
    issuer: string;
    credentialSchema: {
        id: string;
        type: string;
    };
    "@context"?: string[] | undefined;
    expirationDate?: string | undefined;
    issuanceDate?: string | undefined;
    proof?: any;
}>;
//# sourceMappingURL=GenericVerifiableCredentialSchema.d.ts.map