import { z } from "zod";
export declare const AllCredentialAttributes: z.ZodUnion<[z.ZodEnum<["id" | "journeyId" | "reviewAnswer" | "reviewRejectType" | "reviewRejectLabels" | "documentType" | "entryDate" | "entryTime" | "personalData" | "isSandbox", ...("id" | "journeyId" | "reviewAnswer" | "reviewRejectType" | "reviewRejectLabels" | "documentType" | "entryDate" | "entryTime" | "personalData" | "isSandbox")[]]>, z.ZodEnum<["id" | "journeyId" | "reviewAnswer" | "reviewRejectType" | "reviewRejectLabels" | "documentType" | "entryDate" | "entryTime" | "isSandbox" | "base64_front" | "base64_back" | "name" | "mediaType_front" | "mediaType_back", ...("id" | "journeyId" | "reviewAnswer" | "reviewRejectType" | "reviewRejectLabels" | "documentType" | "entryDate" | "entryTime" | "isSandbox" | "base64_front" | "base64_back" | "name" | "mediaType_front" | "mediaType_back")[]]>, z.ZodEnum<["id" | "journeyId" | "reviewAnswer" | "reviewRejectType" | "reviewRejectLabels" | "entryDate" | "entryTime" | "isSandbox" | "name" | "base64" | "mediaType", ...("id" | "journeyId" | "reviewAnswer" | "reviewRejectType" | "reviewRejectLabels" | "entryDate" | "entryTime" | "isSandbox" | "name" | "base64" | "mediaType")[]]>, z.ZodEnum<["id" | "journeyId" | "documentType" | "entryDate" | "entryTime" | "country" | "isSandbox" | "name" | "base64" | "mediaType" | "county" | "city" | "streetName" | "postalCode", ...("id" | "journeyId" | "documentType" | "entryDate" | "entryTime" | "country" | "isSandbox" | "name" | "base64" | "mediaType" | "county" | "city" | "streetName" | "postalCode")[]]>]>;
export type AllCredentialAttributes = z.infer<typeof AllCredentialAttributes>;
export declare const AllCredentialValues: z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">]>;
export type AllCredentialValues = z.infer<typeof AllCredentialValues>;
export declare const Operator: z.ZodEnum<["$noop", "$eq", "$lt", "$lte", "$gt", "$gte", "$in", "$nin", "$ne"]>;
export declare const ZKPOperator: z.ZodEnum<["$noop", "$eq", "$lt", "$gt", "$in", "$nin", "$ne"]>;
export declare const operatorDisplayMap: {
    $eq: string;
    $gt: string;
    $lt: string;
    $gte: string;
    $lte: string;
    $ne: string;
    $in: string;
    $nin: string;
    $noop: string;
};
export declare const ARRAY_OPERATORS: readonly ["$in", "$nin", "$eq", "$ne"];
export declare const ArrayOperator: z.ZodEnum<["$in", "$nin", "$eq", "$ne"]>;
export declare const STRING_OPERATORS: readonly ["$eq", "$ne", "$in", "$nin"];
export declare const StringOperator: z.ZodEnum<["$eq", "$ne", "$in", "$nin"]>;
export declare const NUMERIC_OPERATORS: readonly ["$eq", "$ne", "$gt", "$gte", "$lt", "$lte"];
export declare const NumericOperator: z.ZodEnum<["$eq", "$ne", "$gt", "$gte", "$lt", "$lte"]>;
export declare const BOOLEAN_OPERATORS: readonly ["$eq", "$ne"];
export declare const BooleanOperator: z.ZodEnum<["$eq", "$ne"]>;
export declare const DATE_OPERATORS: readonly ["$eq", "$ne", "$gt", "$gte", "$lt", "$lte"];
export declare const DateOperator: z.ZodEnum<["$eq", "$ne", "$gt", "$gte", "$lt", "$lte"]>;
export declare const SUPPORTED_TYPES: readonly ["string", "integer", "boolean", "number", "array", "date"];
export declare const SupportedType: z.ZodEnum<["string", "integer", "boolean", "number", "array", "date"]>;
export type SupportedType = z.infer<typeof SupportedType>;
export declare const SupportedTypes: z.ZodObject<{
    string: z.ZodEnum<["$eq", "$ne", "$in", "$nin"]>;
    integer: z.ZodEnum<["$eq", "$ne", "$gt", "$gte", "$lt", "$lte"]>;
    boolean: z.ZodEnum<["$eq", "$ne"]>;
    number: z.ZodEnum<["$eq", "$ne", "$gt", "$gte", "$lt", "$lte"]>;
    array: z.ZodEnum<["$in", "$nin", "$eq", "$ne"]>;
    date: z.ZodEnum<["$eq", "$ne", "$gt", "$gte", "$lt", "$lte"]>;
}, "strip", z.ZodTypeAny, {
    string: "$eq" | "$in" | "$nin" | "$ne";
    number: "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$ne";
    boolean: "$eq" | "$ne";
    integer: "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$ne";
    date: "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$ne";
    array: "$eq" | "$in" | "$nin" | "$ne";
}, {
    string: "$eq" | "$in" | "$nin" | "$ne";
    number: "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$ne";
    boolean: "$eq" | "$ne";
    integer: "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$ne";
    date: "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$ne";
    array: "$eq" | "$in" | "$nin" | "$ne";
}>;
export declare const IDInformation: z.ZodObject<{
    type: z.ZodLiteral<"IDInformation">;
    requestId: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    attribute: z.ZodUnion<[z.ZodString, z.ZodEnum<["id" | "journeyId" | "reviewAnswer" | "reviewRejectType" | "reviewRejectLabels" | "documentType" | "entryDate" | "entryTime" | "personalData" | "isSandbox", ...("id" | "journeyId" | "reviewAnswer" | "reviewRejectType" | "reviewRejectLabels" | "documentType" | "entryDate" | "entryTime" | "personalData" | "isSandbox")[]]>]>;
    value: z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">]>;
    operator: z.ZodEnum<["$noop", "$eq", "$lt", "$lte", "$gt", "$gte", "$in", "$nin", "$ne"]>;
}, "strip", z.ZodTypeAny, {
    value: string | number | boolean | (string | number)[];
    type: "IDInformation";
    attribute: string;
    operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
    requestId?: number | null | undefined;
}, {
    value: string | number | boolean | (string | number)[];
    type: "IDInformation";
    attribute: string;
    operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
    requestId?: number | null | undefined;
}>;
export declare const QueryConfig: z.ZodDiscriminatedUnion<"type", [z.ZodObject<{
    type: z.ZodLiteral<"IDInformation">;
    requestId: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    attribute: z.ZodUnion<[z.ZodString, z.ZodEnum<["id" | "journeyId" | "reviewAnswer" | "reviewRejectType" | "reviewRejectLabels" | "documentType" | "entryDate" | "entryTime" | "personalData" | "isSandbox", ...("id" | "journeyId" | "reviewAnswer" | "reviewRejectType" | "reviewRejectLabels" | "documentType" | "entryDate" | "entryTime" | "personalData" | "isSandbox")[]]>]>;
    value: z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">]>;
    operator: z.ZodEnum<["$noop", "$eq", "$lt", "$lte", "$gt", "$gte", "$in", "$nin", "$ne"]>;
}, "strip", z.ZodTypeAny, {
    value: string | number | boolean | (string | number)[];
    type: "IDInformation";
    attribute: string;
    operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
    requestId?: number | null | undefined;
}, {
    value: string | number | boolean | (string | number)[];
    type: "IDInformation";
    attribute: string;
    operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
    requestId?: number | null | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"IDImage">;
    requestId: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    attribute: z.ZodUnion<[z.ZodString, z.ZodEnum<["id" | "journeyId" | "reviewAnswer" | "reviewRejectType" | "reviewRejectLabels" | "documentType" | "entryDate" | "entryTime" | "isSandbox" | "base64_front" | "base64_back" | "name" | "mediaType_front" | "mediaType_back", ...("id" | "journeyId" | "reviewAnswer" | "reviewRejectType" | "reviewRejectLabels" | "documentType" | "entryDate" | "entryTime" | "isSandbox" | "base64_front" | "base64_back" | "name" | "mediaType_front" | "mediaType_back")[]]>]>;
    value: z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">]>;
    operator: z.ZodEnum<["$noop", "$eq", "$lt", "$lte", "$gt", "$gte", "$in", "$nin", "$ne"]>;
}, "strip", z.ZodTypeAny, {
    value: string | number | boolean | (string | number)[];
    type: "IDImage";
    attribute: string;
    operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
    requestId?: number | null | undefined;
}, {
    value: string | number | boolean | (string | number)[];
    type: "IDImage";
    attribute: string;
    operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
    requestId?: number | null | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"SelfieImage">;
    requestId: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    attribute: z.ZodUnion<[z.ZodString, z.ZodEnum<["id" | "journeyId" | "reviewAnswer" | "reviewRejectType" | "reviewRejectLabels" | "entryDate" | "entryTime" | "isSandbox" | "name" | "base64" | "mediaType", ...("id" | "journeyId" | "reviewAnswer" | "reviewRejectType" | "reviewRejectLabels" | "entryDate" | "entryTime" | "isSandbox" | "name" | "base64" | "mediaType")[]]>]>;
    value: z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">]>;
    operator: z.ZodEnum<["$noop", "$eq", "$lt", "$lte", "$gt", "$gte", "$in", "$nin", "$ne"]>;
}, "strip", z.ZodTypeAny, {
    value: string | number | boolean | (string | number)[];
    type: "SelfieImage";
    attribute: string;
    operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
    requestId?: number | null | undefined;
}, {
    value: string | number | boolean | (string | number)[];
    type: "SelfieImage";
    attribute: string;
    operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
    requestId?: number | null | undefined;
}>, z.ZodObject<{
    type: z.ZodLiteral<"ProofOfResidence">;
    requestId: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    attribute: z.ZodUnion<[z.ZodString, z.ZodEnum<["id" | "journeyId" | "documentType" | "entryDate" | "entryTime" | "country" | "isSandbox" | "name" | "base64" | "mediaType" | "county" | "city" | "streetName" | "postalCode", ...("id" | "journeyId" | "documentType" | "entryDate" | "entryTime" | "country" | "isSandbox" | "name" | "base64" | "mediaType" | "county" | "city" | "streetName" | "postalCode")[]]>]>;
    value: z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">]>;
    operator: z.ZodEnum<["$noop", "$eq", "$lt", "$lte", "$gt", "$gte", "$in", "$nin", "$ne"]>;
}, "strip", z.ZodTypeAny, {
    value: string | number | boolean | (string | number)[];
    type: "ProofOfResidence";
    attribute: string;
    operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
    requestId?: number | null | undefined;
}, {
    value: string | number | boolean | (string | number)[];
    type: "ProofOfResidence";
    attribute: string;
    operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
    requestId?: number | null | undefined;
}>]>;
export declare const QueryConfigSimplified: z.ZodObject<{
    type: z.ZodEnum<["IDInformation", "SelfieImage", "IDImage", "ProofOfResidence", "AMLScreeningsResults", "ID3", "IDScan", "IDScanSelfie", "IDScanPassport"]>;
    requestId: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    attribute: z.ZodString;
    value: z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">]>;
    operator: z.ZodEnum<["$noop", "$eq", "$lt", "$lte", "$gt", "$gte", "$in", "$nin", "$ne"]>;
}, "strip", z.ZodTypeAny, {
    value: string | number | boolean | (string | number)[];
    type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
    attribute: string;
    operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
    requestId?: number | null | undefined;
}, {
    value: string | number | boolean | (string | number)[];
    type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
    attribute: string;
    operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
    requestId?: number | null | undefined;
}>;
export declare const PartialQueryConfigSimplified: z.ZodObject<{
    type: z.ZodOptional<z.ZodEnum<["IDInformation", "SelfieImage", "IDImage", "ProofOfResidence", "AMLScreeningsResults", "ID3", "IDScan", "IDScanSelfie", "IDScanPassport"]>>;
    requestId: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodNumber>>>;
    attribute: z.ZodOptional<z.ZodString>;
    value: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">]>>;
    operator: z.ZodOptional<z.ZodEnum<["$noop", "$eq", "$lt", "$lte", "$gt", "$gte", "$in", "$nin", "$ne"]>>;
}, "strip", z.ZodTypeAny, {
    value?: string | number | boolean | (string | number)[] | undefined;
    type?: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport" | undefined;
    requestId?: number | null | undefined;
    attribute?: string | undefined;
    operator?: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne" | undefined;
}, {
    value?: string | number | boolean | (string | number)[] | undefined;
    type?: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport" | undefined;
    requestId?: number | null | undefined;
    attribute?: string | undefined;
    operator?: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne" | undefined;
}>;
export type QueryConfigSimplified = z.infer<typeof QueryConfigSimplified>;
export type PartialQueryConfigSimplified = z.infer<typeof PartialQueryConfigSimplified>;
export declare const QueryConfigSimplifiedParsed: z.ZodEffects<z.ZodObject<{
    type: z.ZodEnum<["IDInformation", "SelfieImage", "IDImage", "ProofOfResidence", "AMLScreeningsResults", "ID3", "IDScan", "IDScanSelfie", "IDScanPassport"]>;
    requestId: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
    attribute: z.ZodString;
    value: z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">]>;
    operator: z.ZodEnum<["$noop", "$eq", "$lt", "$lte", "$gt", "$gte", "$in", "$nin", "$ne"]>;
}, "strip", z.ZodTypeAny, {
    value: string | number | boolean | (string | number)[];
    type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
    attribute: string;
    operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
    requestId?: number | null | undefined;
}, {
    value: string | number | boolean | (string | number)[];
    type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
    attribute: string;
    operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
    requestId?: number | null | undefined;
}>, {
    requestId: number | null | undefined;
    type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
    attribute: string;
    operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
    value: string | number | boolean | (string | number)[];
}, {
    value: string | number | boolean | (string | number)[];
    type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
    attribute: string;
    operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
    requestId?: number | null | undefined;
}>;
export declare const QueryConfiguration: z.ZodObject<{
    id: z.ZodString;
    query: z.ZodEffects<z.ZodObject<{
        type: z.ZodEnum<["IDInformation", "SelfieImage", "IDImage", "ProofOfResidence", "AMLScreeningsResults", "ID3", "IDScan", "IDScanSelfie", "IDScanPassport"]>;
        requestId: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        attribute: z.ZodString;
        value: z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">]>;
        operator: z.ZodEnum<["$noop", "$eq", "$lt", "$lte", "$gt", "$gte", "$in", "$nin", "$ne"]>;
    }, "strip", z.ZodTypeAny, {
        value: string | number | boolean | (string | number)[];
        type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
        attribute: string;
        operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
        requestId?: number | null | undefined;
    }, {
        value: string | number | boolean | (string | number)[];
        type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
        attribute: string;
        operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
        requestId?: number | null | undefined;
    }>, {
        requestId: number | null | undefined;
        type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
        attribute: string;
        operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
        value: string | number | boolean | (string | number)[];
    }, {
        value: string | number | boolean | (string | number)[];
        type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
        attribute: string;
        operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
        requestId?: number | null | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    id: string;
    query: {
        requestId: number | null | undefined;
        type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
        attribute: string;
        operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
        value: string | number | boolean | (string | number)[];
    };
}, {
    id: string;
    query: {
        value: string | number | boolean | (string | number)[];
        type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
        attribute: string;
        operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
        requestId?: number | null | undefined;
    };
}>;
export declare const CreateQueryConfigurationInput: z.ZodObject<{
    query: z.ZodObject<{
        type: z.ZodEnum<["IDInformation", "SelfieImage", "IDImage", "ProofOfResidence", "AMLScreeningsResults", "ID3", "IDScan", "IDScanSelfie", "IDScanPassport"]>;
        requestId: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        attribute: z.ZodString;
        value: z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">]>;
        operator: z.ZodEnum<["$noop", "$eq", "$lt", "$lte", "$gt", "$gte", "$in", "$nin", "$ne"]>;
    }, "strip", z.ZodTypeAny, {
        value: string | number | boolean | (string | number)[];
        type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
        attribute: string;
        operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
        requestId?: number | null | undefined;
    }, {
        value: string | number | boolean | (string | number)[];
        type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
        attribute: string;
        operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
        requestId?: number | null | undefined;
    }>;
    scenarioId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    scenarioId: string;
    query: {
        value: string | number | boolean | (string | number)[];
        type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
        attribute: string;
        operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
        requestId?: number | null | undefined;
    };
}, {
    scenarioId: string;
    query: {
        value: string | number | boolean | (string | number)[];
        type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
        attribute: string;
        operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
        requestId?: number | null | undefined;
    };
}>;
export declare const CreateQueryConfigurationResponse: z.ZodObject<{
    queryConfiguration: z.ZodEffects<z.ZodObject<{
        type: z.ZodEnum<["IDInformation", "SelfieImage", "IDImage", "ProofOfResidence", "AMLScreeningsResults", "ID3", "IDScan", "IDScanSelfie", "IDScanPassport"]>;
        requestId: z.ZodOptional<z.ZodNullable<z.ZodNumber>>;
        attribute: z.ZodString;
        value: z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">]>;
        operator: z.ZodEnum<["$noop", "$eq", "$lt", "$lte", "$gt", "$gte", "$in", "$nin", "$ne"]>;
    }, "strip", z.ZodTypeAny, {
        value: string | number | boolean | (string | number)[];
        type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
        attribute: string;
        operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
        requestId?: number | null | undefined;
    }, {
        value: string | number | boolean | (string | number)[];
        type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
        attribute: string;
        operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
        requestId?: number | null | undefined;
    }>, {
        requestId: number | null | undefined;
        type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
        attribute: string;
        operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
        value: string | number | boolean | (string | number)[];
    }, {
        value: string | number | boolean | (string | number)[];
        type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
        attribute: string;
        operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
        requestId?: number | null | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    queryConfiguration: {
        requestId: number | null | undefined;
        type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
        attribute: string;
        operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
        value: string | number | boolean | (string | number)[];
    };
}, {
    queryConfiguration: {
        value: string | number | boolean | (string | number)[];
        type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
        attribute: string;
        operator: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne";
        requestId?: number | null | undefined;
    };
}>;
export declare const UpdateQueryConfigurationInput: z.ZodObject<{
    queryConfigurationId: z.ZodString;
    scenarioId: z.ZodString;
    query: z.ZodObject<{
        type: z.ZodOptional<z.ZodEnum<["IDInformation", "SelfieImage", "IDImage", "ProofOfResidence", "AMLScreeningsResults", "ID3", "IDScan", "IDScanSelfie", "IDScanPassport"]>>;
        requestId: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodNumber>>>;
        attribute: z.ZodOptional<z.ZodString>;
        value: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">]>>;
        operator: z.ZodOptional<z.ZodEnum<["$noop", "$eq", "$lt", "$lte", "$gt", "$gte", "$in", "$nin", "$ne"]>>;
    }, "strip", z.ZodTypeAny, {
        value?: string | number | boolean | (string | number)[] | undefined;
        type?: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport" | undefined;
        requestId?: number | null | undefined;
        attribute?: string | undefined;
        operator?: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne" | undefined;
    }, {
        value?: string | number | boolean | (string | number)[] | undefined;
        type?: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport" | undefined;
        requestId?: number | null | undefined;
        attribute?: string | undefined;
        operator?: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne" | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    scenarioId: string;
    query: {
        value?: string | number | boolean | (string | number)[] | undefined;
        type?: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport" | undefined;
        requestId?: number | null | undefined;
        attribute?: string | undefined;
        operator?: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne" | undefined;
    };
    queryConfigurationId: string;
}, {
    scenarioId: string;
    query: {
        value?: string | number | boolean | (string | number)[] | undefined;
        type?: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport" | undefined;
        requestId?: number | null | undefined;
        attribute?: string | undefined;
        operator?: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne" | undefined;
    };
    queryConfigurationId: string;
}>;
export declare const UpdateQueryConfigurationResponse: z.ZodObject<{
    queryConfiguration: z.ZodEffects<z.ZodObject<{
        type: z.ZodOptional<z.ZodEnum<["IDInformation", "SelfieImage", "IDImage", "ProofOfResidence", "AMLScreeningsResults", "ID3", "IDScan", "IDScanSelfie", "IDScanPassport"]>>;
        requestId: z.ZodOptional<z.ZodOptional<z.ZodNullable<z.ZodNumber>>>;
        attribute: z.ZodOptional<z.ZodString>;
        value: z.ZodOptional<z.ZodUnion<[z.ZodBoolean, z.ZodString, z.ZodNumber, z.ZodArray<z.ZodUnion<[z.ZodString, z.ZodNumber]>, "many">]>>;
        operator: z.ZodOptional<z.ZodEnum<["$noop", "$eq", "$lt", "$lte", "$gt", "$gte", "$in", "$nin", "$ne"]>>;
    }, "strip", z.ZodTypeAny, {
        value?: string | number | boolean | (string | number)[] | undefined;
        type?: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport" | undefined;
        requestId?: number | null | undefined;
        attribute?: string | undefined;
        operator?: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne" | undefined;
    }, {
        value?: string | number | boolean | (string | number)[] | undefined;
        type?: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport" | undefined;
        requestId?: number | null | undefined;
        attribute?: string | undefined;
        operator?: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne" | undefined;
    }>, {
        value?: string | number | boolean | (string | number)[] | undefined;
        type?: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport" | undefined;
        requestId?: number | null | undefined;
        attribute?: string | undefined;
        operator?: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne" | undefined;
    }, {
        value?: string | number | boolean | (string | number)[] | undefined;
        type?: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport" | undefined;
        requestId?: number | null | undefined;
        attribute?: string | undefined;
        operator?: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne" | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    queryConfiguration: {
        value?: string | number | boolean | (string | number)[] | undefined;
        type?: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport" | undefined;
        requestId?: number | null | undefined;
        attribute?: string | undefined;
        operator?: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne" | undefined;
    };
}, {
    queryConfiguration: {
        value?: string | number | boolean | (string | number)[] | undefined;
        type?: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport" | undefined;
        requestId?: number | null | undefined;
        attribute?: string | undefined;
        operator?: "$noop" | "$eq" | "$lt" | "$lte" | "$gt" | "$gte" | "$in" | "$nin" | "$ne" | undefined;
    };
}>;
export declare const DeleteQueryConfigurationInput: z.ZodObject<{
    queryConfigurationId: z.ZodString;
    scenarioId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    scenarioId: string;
    queryConfigurationId: string;
}, {
    scenarioId: string;
    queryConfigurationId: string;
}>;
export declare const DeleteQueryConfigurationResponse: z.ZodObject<{
    queryConfigurationId: z.ZodString;
}, "strip", z.ZodTypeAny, {
    queryConfigurationId: string;
}, {
    queryConfigurationId: string;
}>;
export type Operator = z.infer<typeof Operator>;
export type QueryConfig = z.infer<typeof QueryConfig>;
export type CreateQueryConfigurationInput = z.infer<typeof CreateQueryConfigurationInput>;
export type CreateQueryConfigurationResponse = z.infer<typeof CreateQueryConfigurationResponse>;
export type UpdateQueryConfigurationInput = z.infer<typeof UpdateQueryConfigurationInput>;
export type UpdateQueryConfigurationResponse = z.infer<typeof UpdateQueryConfigurationResponse>;
export type DeleteQueryConfigurationInput = z.infer<typeof DeleteQueryConfigurationInput>;
export type DeleteQueryConfigurationResponse = z.infer<typeof DeleteQueryConfigurationResponse>;
export type QueryConfiguration = z.infer<typeof QueryConfiguration>;
export type SupportedTypes = z.infer<typeof SupportedTypes>;
export type ArrayOperator = z.infer<typeof ArrayOperator>;
export type BooleanOperator = z.infer<typeof BooleanOperator>;
export type DateOperator = z.infer<typeof DateOperator>;
export type NumericOperator = z.infer<typeof NumericOperator>;
export type StringOperator = z.infer<typeof StringOperator>;
export declare const QueryCredentialTypes: readonly ["IDInformation", "IDImage", "SelfieImage", "ProofOfResidence"];
export declare const QueryCredentialType: z.ZodEnum<["IDInformation", "IDImage", "SelfieImage", "ProofOfResidence"]>;
export type QueryCredentialType = z.infer<typeof QueryCredentialType>;
//# sourceMappingURL=query.schema.d.ts.map