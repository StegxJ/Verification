import { z } from "zod";
export declare const ComplianceImplementationStepsInput: z.ZodObject<{
    identityChecks: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    configureIdentity: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    deployIdentity: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
    monitorIdentity: z.ZodOptional<z.ZodNullable<z.ZodBoolean>>;
}, "strip", z.ZodTypeAny, {
    identityChecks?: boolean | null | undefined;
    configureIdentity?: boolean | null | undefined;
    deployIdentity?: boolean | null | undefined;
    monitorIdentity?: boolean | null | undefined;
}, {
    identityChecks?: boolean | null | undefined;
    configureIdentity?: boolean | null | undefined;
    deployIdentity?: boolean | null | undefined;
    monitorIdentity?: boolean | null | undefined;
}>;
export type ComplianceImplementationStepsInput = z.infer<typeof ComplianceImplementationStepsInput>;
//# sourceMappingURL=get-started.schema.d.ts.map