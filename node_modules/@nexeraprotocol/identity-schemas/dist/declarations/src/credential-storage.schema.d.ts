import { z } from "zod";
export declare const EncryptedKycKey: z.ZodObject<{
    address: z.ZodString;
    encryptedPrivateKey: z.ZodString;
    signingMessage: z.ZodString;
    salt: z.ZodEffects<z.ZodUnknown, unknown, unknown>;
    iv: z.ZodEffects<z.ZodUnknown, unknown, unknown>;
    did: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    address: string;
    encryptedPrivateKey: string;
    signingMessage: string;
    salt?: unknown;
    iv?: unknown;
    did?: string | undefined;
}, {
    address: string;
    encryptedPrivateKey: string;
    signingMessage: string;
    salt?: unknown;
    iv?: unknown;
    did?: string | undefined;
}>;
export declare const EncryptedVerifiableCredentialDataSchema: z.ZodObject<{
    iv: z.ZodEffects<z.ZodUnknown, unknown, unknown>;
    ephemPublicKey: z.ZodEffects<z.ZodUnknown, unknown, unknown>;
    ciphertext: z.ZodEffects<z.ZodUnknown, unknown, unknown>;
    mac: z.ZodEffects<z.ZodUnknown, unknown, unknown>;
}, "strip", z.ZodTypeAny, {
    iv?: unknown;
    ephemPublicKey?: unknown;
    ciphertext?: unknown;
    mac?: unknown;
}, {
    iv?: unknown;
    ephemPublicKey?: unknown;
    ciphertext?: unknown;
    mac?: unknown;
}>;
export declare const EncryptedVerifiableCredentialSchema: z.ZodObject<{
    id: z.ZodOptional<z.ZodNumber>;
    did: z.ZodString;
    journeyId: z.ZodOptional<z.ZodString>;
    type: z.ZodEnum<["AMLScreeningsResults", "ProofOfResidence", "SelfieImage", "IDImage", "IDInformation", "ID3", "IDScan", "IDScanSelfie", "IDScanPassport"]>;
    datetime: z.ZodDate;
    credential: z.ZodObject<{
        iv: z.ZodEffects<z.ZodUnknown, unknown, unknown>;
        ephemPublicKey: z.ZodEffects<z.ZodUnknown, unknown, unknown>;
        ciphertext: z.ZodEffects<z.ZodUnknown, unknown, unknown>;
        mac: z.ZodEffects<z.ZodUnknown, unknown, unknown>;
    }, "strip", z.ZodTypeAny, {
        iv?: unknown;
        ephemPublicKey?: unknown;
        ciphertext?: unknown;
        mac?: unknown;
    }, {
        iv?: unknown;
        ephemPublicKey?: unknown;
        ciphertext?: unknown;
        mac?: unknown;
    }>;
    identifier: z.ZodOptional<z.ZodString>;
}, "strip", z.ZodTypeAny, {
    type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
    did: string;
    datetime: Date;
    credential: {
        iv?: unknown;
        ephemPublicKey?: unknown;
        ciphertext?: unknown;
        mac?: unknown;
    };
    id?: number | undefined;
    journeyId?: string | undefined;
    identifier?: string | undefined;
}, {
    type: "AMLScreeningsResults" | "ProofOfResidence" | "SelfieImage" | "IDImage" | "IDInformation" | "ID3" | "IDScan" | "IDScanSelfie" | "IDScanPassport";
    did: string;
    datetime: Date;
    credential: {
        iv?: unknown;
        ephemPublicKey?: unknown;
        ciphertext?: unknown;
        mac?: unknown;
    };
    id?: number | undefined;
    journeyId?: string | undefined;
    identifier?: string | undefined;
}>;
export type EncryptedVerifiableCredential = z.infer<typeof EncryptedVerifiableCredentialSchema>;
export declare const DownloadableKycSchema: z.ZodObject<{
    vcs: z.ZodArray<z.ZodAny, "many">;
    key: z.ZodObject<{
        address: z.ZodString;
        encryptedPrivateKey: z.ZodString;
        signingMessage: z.ZodString;
        salt: z.ZodEffects<z.ZodUnknown, unknown, unknown>;
        iv: z.ZodEffects<z.ZodUnknown, unknown, unknown>;
        did: z.ZodOptional<z.ZodString>;
    }, "strip", z.ZodTypeAny, {
        address: string;
        encryptedPrivateKey: string;
        signingMessage: string;
        salt?: unknown;
        iv?: unknown;
        did?: string | undefined;
    }, {
        address: string;
        encryptedPrivateKey: string;
        signingMessage: string;
        salt?: unknown;
        iv?: unknown;
        did?: string | undefined;
    }>;
}, "strip", z.ZodTypeAny, {
    vcs: any[];
    key: {
        address: string;
        encryptedPrivateKey: string;
        signingMessage: string;
        salt?: unknown;
        iv?: unknown;
        did?: string | undefined;
    };
}, {
    vcs: any[];
    key: {
        address: string;
        encryptedPrivateKey: string;
        signingMessage: string;
        salt?: unknown;
        iv?: unknown;
        did?: string | undefined;
    };
}>;
export type DownloadableKyc = z.infer<typeof DownloadableKycSchema>;
export type EncryptedKycKey = z.infer<typeof EncryptedKycKey>;
//# sourceMappingURL=credential-storage.schema.d.ts.map